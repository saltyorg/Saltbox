#########################################################################
# Title:         Saltbox: Resources | Tasks | systemd | Delete Service  #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Resources | Tasks | systemd | Delete Service | set '_service_file' variable
  ansible.builtin.set_fact:
    _service_file: "{{ _service_name }}.service"

- name: Resources | Tasks | systemd | Delete Service | set '_service_path' variable
  ansible.builtin.set_fact:
    _service_path: "/etc/systemd/system/{{ _service_file }}"

- name: Resources | Tasks | systemd | Delete Service | check if '{{ _service_file }}' exists
  ansible.builtin.stat:
    path: "{{ _service_path }}"
  register: service_status

- name: Resources | Tasks | systemd | Delete Service | existing '{{ _service_file }}' tasks
  when: service_status.stat.exists
  block:
    - name: Resources | Tasks | systemd | Delete Service | populate service facts
      ansible.builtin.service_facts:

    - name: Resources | Tasks | systemd | Delete Service | get '{{ _service_file }}' state
      ansible.builtin.set_fact:
        service_running: "{{ (services[_service_file] is defined) and (services[_service_file]['state'] == 'running') }}"

    - name: Resources | Tasks | systemd | Delete Service | stop '{{ _service_file }}'
      ansible.builtin.systemd_service:
        name: "{{ _service_name }}"
        state: stopped
        enabled: false
      when: service_running

    - name: Resources | Tasks | systemd | Delete Service | disable '{{ _service_file }}'
      ansible.builtin.systemd_service:
        name: "{{ _service_name }}"
        enabled: false

    - name: Resources | Tasks | systemd | Delete Service | remove '{{ _service_file }}' file
      ansible.builtin.file:
        path: "{{ _service_path }}"
        state: absent
        force: true

    - name: Resources | Tasks | systemd | Delete Service | systemd daemon-reload
      ansible.builtin.systemd_service:
        daemon_reload: true
