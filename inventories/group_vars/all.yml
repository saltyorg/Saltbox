##########################################################################
# Title:         Saltbox: Global Variables                               #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Ansible venv
################################

saltbox_python: "/srv/ansible/venv/bin/python3"
saltbox_venv_path: "/srv/ansible/venv"

################################
# Resources
################################

resources_tasks_path: "/srv/git/saltbox/resources/tasks"
resources_path: "/srv/git/saltbox/resources"

################################
# Continuous Integration
################################

continuous_integration: false

################################
# Accounts
################################

cloudflare_is_enabled: "{{ (cloudflare is defined) and
                           (cloudflare is not none) and
                           (cloudflare | trim | length > 0) and
                           (cloudflare.email is defined) and
                           (cloudflare.email is not none) and
                           (cloudflare.email | trim | length > 0) and
                           (cloudflare.api is defined) and
                           (cloudflare.api is not none) and
                           (cloudflare.api | trim | length > 0) }}"

cloudflare_records_enabled: "{{ cloudflare_is_enabled }}"

plex_account_lookup: "{{ '/opt/saltbox/plex.ini' | check_plex_ini(plex_instances[0]) }}"

plex_account_is_enabled: "{{ plex_account_lookup.exists and
                             (plex_account_lookup.identifier | length > 0) and
                             (plex_account_lookup.token | length > 0) }}"

crowdsec_is_enabled: "{{ crowdsec_enabled | bool }}"

################################
# Role Conditionals
################################

nzbs_downloads_path_is_defined: "{{ (downloads is defined) and
                                    (downloads is not none) and
                                    (downloads | trim | length > 0) and
                                    (downloads_usenet_path is defined) and
                                    (downloads_usenet_path is not none) and
                                    (downloads_usenet_path | trim | length > 0) }}"

torrents_downloads_path_is_defined: "{{ (downloads is defined) and
                                        (downloads is not none) and
                                        (downloads | trim | length > 0) and
                                        (downloads_torrents_path is defined) and
                                        (downloads_torrents_path is not none) and
                                        (downloads_torrents_path | trim | length > 0) }}"

rclone_remote_is_defined: "{{ (rclone is defined) and
                              (rclone is not none) and
                              (rclone | trim | length > 0) and
                              (rclone.remotes is defined) and
                              (rclone.remotes is not none) and
                              (rclone.remotes | length > 0) }}"

rclone_old_remote_is_defined: "{{ (rclone is defined) and
                                  (rclone is not none) and
                                  (rclone | trim | length > 0) and
                                  (rclone.remote is defined) and
                                  (rclone.remote is not none) and
                                  (rclone.remote | trim | length > 0) }}"

use_cloudplow: "{{ rclone_remote_is_defined and use_remote }}"

use_remote: "{{ (rclone.enabled | bool) and not continuous_integration }}"

use_motd: "{{ motd_install | bool }}"

use_nvidia: "{{ nvidia_enabled | bool }}"

################################
# System
################################

server_root_path: "/"

server_appdata_path: "{{ server_root_path | regex_replace('\\/$', '') + '/opt' }}"

################################
# Paths
################################

transcodes_path: "{{ transcodes }}"

downloads_root_path: "{{ downloads }}"

downloads_torrents_path: "{{ downloads }}/torrents"

downloads_usenet_path: "{{ downloads }}/nzbs"

downloads_custom_path: "{{ false
                        if downloads_torrents_path.startswith(downloads_root_path) and downloads_usenet_path.startswith(downloads_root_path)
                        else true }}"

################################
# User
################################

uid: "{{ ansible_local.saltbox.users[user.name].uid }}"
gid: "{{ ansible_local.saltbox.users[user.name].gid }}"
vgid: "{{ ansible_local.saltbox.groups.video.gid }}"
rgid: "{{ ansible_local.saltbox.groups.render.gid }}"
dockergid: "{{ ansible_local.saltbox.groups.docker.gid }}"

################################
# Timezone
################################

tz: "{{ system.timezone
     if (system is defined) and (system.timezone is defined) and ('auto' not in system.timezone | lower)
     else ansible_local.saltbox.timezone.timezone
          if (ansible_local is defined) and (ansible_local.saltbox.timezone is defined) and (ansible_local.saltbox.timezone.timezone is defined) and (ansible_local.saltbox.timezone.timezone | trim | length > 0)
          else 'Etc/UTC' }}"

################################
# Network
################################

ip_address_host: "0.0.0.0"
ip_address_localhost: "127.0.0.1"
ip_address_public: "{{ ansible_local.saltbox.ip.public_ip }}"
ip_address_public_is_valid: "{{ false if ansible_local.saltbox.ip.failed_ipv4 else true }}"
ip_address_public_error: "{{ ansible_local.saltbox.ip.error_ipv4 }}"
ipv6_address_public: "{{ ansible_local.saltbox.ip.public_ipv6 }}"
ipv6_address_public_is_valid: "{{ false if ansible_local.saltbox.ip.failed_ipv6 else true }}"
ipv6_address_public_error: "{{ ansible_local.saltbox.ip.error_ipv6 }}"

################################
# Theme
################################

# Options can be found at https://github.com/themepark-dev/theme.park
global_themepark_theme: organizr
global_themepark_domain: theme-park.dev
global_themepark_plugin_enabled: false

################################
# Authelia
################################

authelia_is_master: "{{ authelia.master | bool }}"

################################
# Authentik
################################

authentik_is_master: "{{ authelia.master | bool }}"

################################
# ZeroSSL
################################

zerossl_is_enabled: "{{ (traefik_enable_zerossl | bool) and (traefik.cert.zerossl | bool) }}"

################################
# Traefik
################################

traefik_role_var: "{{ lookup('vars', role_name + '_name', default=role_name) }}"

# Replaces powerdns with pdns for config sanity reasons.
traefik_challenge_provider: "{{ traefik.provider | default('cloudflare') | replace('powerdns', 'pdns') }}"
traefik_default_certprovider: "{{ 'cfdns'
                               if (not zerossl_is_enabled)
                               else 'zerossl' }}"
traefik_default_zerossl_resolver: "zerosslhttp"
traefik_default_resolver: "httpresolver"
traefik_default_certresolver: "{{ traefik_default_certprovider
                               if (not (traefik_http | bool))
                               else (traefik_default_resolver if not zerossl_is_enabled else traefik_default_zerossl_resolver) }}"

traefik_error_pages_enabled: "{{ traefik.error_pages | bool }}"
traefik_error_pages_role_enabled: "{{ lookup('role_var', '_traefik_error_pages_enabled', default=false) | bool }}"
traefik_error_pages_middleware: "{{ 'error-pages-middleware@docker,'
                                 if traefik_error_pages_enabled and traefik_error_pages_role_enabled
                                 else '' }}"

traefik_default_robot: true
traefik_default_gzip: false
traefik_default_autodetect: false
traefik_default_cloudflarewarp: "{{ lookup('role_var', '_dns_proxy', default=dns.proxied) and cloudflare_is_enabled and traefik_plugin_cloudflarewarp_enabled }}"

traefik_default_middleware_default: "{{ traefik_error_pages_middleware
                                        + 'globalHeaders@file,secureHeaders@file'
                                        + (',autodetect@docker'
                                          if (lookup('role_var', '_traefik_autodetect_enabled', default=traefik_default_autodetect) | bool)
                                          else '')
                                        + (',gzip@docker'
                                          if (lookup('role_var', '_traefik_gzip_enabled', default=traefik_default_gzip) | bool)
                                          else '')
                                        + (',robotHeaders@file'
                                          if (lookup('role_var', '_traefik_robot_enabled', default=traefik_default_robot) | bool)
                                          else '')
                                        + (',hsts@file'
                                          if (traefik.hsts | bool)
                                          else '')
                                        + (',cloudflarewarp@docker'
                                          if (traefik_default_cloudflarewarp | bool)
                                          else '')
                                        + (',crowdsec@docker'
                                          if (lookup('role_var', '_traefik_crowdsec_enabled', default=crowdsec_is_enabled))
                                          else '')
                                        + (',' if (traefik_role_middleware_sso | length > 0)
                                               else '')
                                        + traefik_role_middleware_sso }}"
traefik_default_middleware_custom: ""
traefik_default_middleware: "{{ traefik_default_middleware_default
                                + (',' + traefik_default_middleware_custom
                                  if (not traefik_default_middleware_custom.startswith(',') and traefik_default_middleware_custom | length > 0)
                                  else traefik_default_middleware_custom) }}"

traefik_role_middleware_sso: "{{ lookup('role_var', '_traefik_sso_middleware', default='') }}"
traefik_role_middleware_default: "{{ lookup('role_var', '_traefik_middleware_default', default='') }}"
traefik_role_middleware_custom: "{{ lookup('role_var', '_traefik_middleware_custom', default='') }}"

traefik_middleware: "{{ traefik_role_middleware_default
                        + (',' + traefik_role_middleware_custom
                          if (not traefik_role_middleware_custom.startswith(',') and traefik_role_middleware_custom | length > 0)
                          else traefik_role_middleware_custom) }}"

traefik_default_middleware_default_http: "{{ traefik_error_pages_middleware }}globalHeaders@file,redirect-to-https@docker"
traefik_default_middleware_custom_http: ""
traefik_default_middleware_http: "{{ traefik_default_middleware_default_http
                                     + (',' + traefik_default_middleware_custom_http
                                       if (not traefik_default_middleware_custom_http.startswith(',') and traefik_default_middleware_custom_http | length > 0)
                                       else traefik_default_middleware_custom_http)
                                     + (',autodetect@docker'
                                       if (lookup('role_var', '_traefik_autodetect_enabled', default=traefik_default_autodetect) | bool)
                                       else '')
                                     + (',gzip@docker'
                                       if (lookup('role_var', '_traefik_gzip_enabled', default=traefik_default_gzip) | bool)
                                       else '')
                                     + (',robotHeaders@file'
                                       if (lookup('role_var', '_traefik_robot_enabled', default=traefik_default_robot) | bool)
                                       else '')
                                     + (',cloudflarewarp@docker'
                                       if (traefik_default_cloudflarewarp | bool)
                                       else '')
                                     + (',crowdsec@docker'
                                       if (lookup('role_var', '_traefik_crowdsec_enabled', default=crowdsec_is_enabled) | bool)
                                       else '')
                                     + (',' if (traefik_role_middleware_sso | length > 0)
                                       else '')
                                     + traefik_role_middleware_sso }}"

traefik_default_middleware_default_http_api: "globalHeaders@file,redirect-to-https@docker"
traefik_default_middleware_custom_http_api: ""
traefik_default_middleware_http_api: "{{ traefik_default_middleware_default_http_api
                                         + (',' + traefik_default_middleware_custom_http_api
                                           if (not traefik_default_middleware_custom_http_api.startswith(',') and traefik_default_middleware_custom_http_api | length > 0)
                                           else traefik_default_middleware_custom_http_api)
                                         + (',autodetect@docker'
                                           if (lookup('role_var', '_traefik_autodetect_enabled', default=traefik_default_autodetect) | bool)
                                           else '')
                                         + (',gzip@docker'
                                           if (lookup('role_var', '_traefik_gzip_enabled', default=traefik_default_gzip) | bool)
                                           else '')
                                          + (',robotHeaders@file'
                                           if (lookup('role_var', '_traefik_robot_enabled', default=traefik_default_robot) | bool)
                                           else '')
                                         + (',cloudflarewarp@docker'
                                           if (traefik_default_cloudflarewarp | bool)
                                           else '')
                                         + (',crowdsec@docker'
                                           if (lookup('role_var', '_traefik_crowdsec_enabled', default=crowdsec_is_enabled) | bool)
                                           else '') }}"

traefik_default_middleware_default_api: "{{ 'globalHeaders@file,secureHeaders@file'
                                            + (',autodetect@docker'
                                              if (lookup('role_var', '_traefik_autodetect_enabled', default=traefik_default_autodetect) | bool)
                                              else '')
                                            + (',gzip@docker'
                                              if (lookup('role_var', '_traefik_gzip_enabled', default=traefik_default_gzip) | bool)
                                              else '')
                                            + (',robotHeaders@file'
                                              if (lookup('role_var', '_traefik_robot_enabled', default=traefik_default_robot) | bool)
                                              else '')
                                            + (',hsts@file'
                                              if (traefik.hsts | bool)
                                              else '')
                                            + (',cloudflarewarp@docker'
                                              if (traefik_default_cloudflarewarp | bool)
                                              else '')
                                            + (',crowdsec@docker'
                                              if (lookup('role_var', '_traefik_crowdsec_enabled', default=crowdsec_is_enabled) | bool)
                                              else '') }}"
traefik_default_middleware_custom_api: ""
traefik_default_middleware_api: "{{ traefik_default_middleware_default_api
                                    + (',' + traefik_default_middleware_custom_api
                                      if (not traefik_default_middleware_custom_api.startswith(',') and traefik_default_middleware_custom_api | length > 0)
                                      else traefik_default_middleware_custom_api) }}"

traefik_default_sso_middleware: "authelia@docker"

traefik_role_enabled: "{{ lookup('role_var', '_traefik_enabled', default=false) | bool }}"
traefik_role_api_enabled: "{{ lookup('role_var', '_traefik_api_enabled', default=false) | bool }}"

traefik_http: "{{ false
               if ((traefik_challenge_provider != 'cloudflare') or cloudflare_is_enabled)
               else true }}"

traefik_subdomain: "{{ lookup('role_var', '_web_subdomain', default=omit) }}"
traefik_domain: "{{ lookup('role_var', '_web_domain', default=omit) }}"
traefik_router: "{{ lookup('vars', traefik_role_var + '_name', default=lookup('vars', role_name + '_name', default=omit)) }}"

traefik_loadbalancer_port: "{{ lookup('role_var', '_web_port', default=omit) }}"
traefik_loadbalancer_scheme: "{{ lookup('role_var', '_web_scheme', default=omit) }}"

traefik_host: "{{ traefik_subdomain + '.' + traefik_domain
               if (traefik_subdomain | length > 0)
               else traefik_domain }}"

traefik_host_override_lookup: "{{ lookup('role_var', '_web_host_override', default='') }}"
traefik_fqdn_override_lookup: "{{ lookup('role_var', '_web_fqdn_override', default='') }}"
traefik_host_template: "{{ traefik_host | traefik_host_rule(traefik_host_override_lookup, traefik_fqdn_override_lookup) }}"

traefik_entrypoint_tailscale_default: false
traefik_entrypoint_web_default: "{{ 'web' if not (lookup('role_var', '_traefik_tailscale_enabled', default=traefik_entrypoint_tailscale_default) | bool) else 'tailscale-web' }}"
traefik_entrypoint_web: "{{ lookup('role_var', '_traefik_entrypoint_web', default=traefik_entrypoint_web_default) }}"
traefik_entrypoint_websecure_default: "{{ 'websecure' if not (lookup('role_var', '_traefik_tailscale_enabled', default=traefik_entrypoint_tailscale_default) | bool) else 'tailscale-websecure' }}"
traefik_entrypoint_websecure: "{{ lookup('role_var', '_traefik_entrypoint_websecure', default=traefik_entrypoint_websecure_default) }}"

traefik_url: "{{ 'https://'
                 + (lookup('role_var', '_web_subdomain', default='') + '.'
                 + lookup('role_var', '_web_domain', default='')
              if (lookup('role_var', '_web_subdomain', default='') | length > 0)
              else lookup('role_var', '_web_domain', default='')) }}"

traefik_themepark_labels:
  - '{ "traefik.http.middlewares.themepark-{{ traefik_router }}.plugin.themepark.app": "{{ lookup("role_var", "_themepark_app", default=role_name) }}" }'
  - '{ "traefik.http.middlewares.themepark-{{ traefik_router }}.plugin.themepark.theme": "{{ lookup("role_var", "_themepark_theme", default="") }}" }'
  - '{ "traefik.http.middlewares.themepark-{{ traefik_router }}.plugin.themepark.addons": "{{ (lookup("role_var", "_themepark_addons", default="") | join(","))
                                                                                           if lookup("role_var", "_themepark_addons", default="") | length > 0
                                                                                           else omit }}" }'

################################
# Docker
################################

# Toggles pruning of dangling images after container creation.
docker_create_image_prune: true
docker_create_image_prune_delay: false
docker_create_image_prune_delay_timeout: 10

docker_volumes_downloads_nzbs: "{{ [downloads_usenet_path + ':/downloads/nzbs']
                                if nzbs_downloads_path_is_defined
                                else [] }}"

docker_volumes_downloads_torrents: "{{ [downloads_torrents_path + ':/downloads/torrents']
                                    if torrents_downloads_path_is_defined
                                    else [] }}"

docker_volumes_downloads_common: "{{ docker_volumes_downloads_nzbs + docker_volumes_downloads_torrents
                                  if downloads_custom_path
                                  else [downloads_root_path + ':/downloads'] }}"

docker_volumes_common_folders:
  - "/mnt:/mnt:rslave"

docker_volumes_common: "{{ docker_volumes_common_folders + docker_volumes_downloads_common
                        if (lookup('vars', traefik_role_var + '_docker_volumes_download', default=true) | bool)
                        else docker_volumes_common_folders }}"

docker_hosts_common: {}

docker_labels_docker_depends_on_template:
  com.github.saltbox.depends_on: "{{ lookup('role_var', '_depends_on', default=docker_container_network_mode_lookup)
                                  if docker_container_network_mode
                                  else lookup('role_var', '_depends_on') }}"

docker_labels_docker_depends_on_delay_template:
  com.github.saltbox.depends_on.delay: "{{ lookup('role_var', '_depends_on_delay', default='0')
                                        if docker_container_network_mode
                                        else lookup('role_var', '_depends_on_delay') }}"

docker_labels_docker_depends_on_healthchecks_template:
  com.github.saltbox.depends_on.healthchecks: "{{ lookup('role_var', '_depends_on_healthchecks', default='true')
                                               if docker_container_network_mode
                                               else lookup('role_var', '_depends_on_healthchecks') }}"

docker_labels_diun_enabled: true
docker_labels_autoheal_enabled: true
docker_labels_autoheal_timeout: "10"

docker_labels_diun_template:
  diun.enable: "true"

docker_labels_autoheal_template:
  autoheal: "true"
  autoheal.stop.timeout: "{{ lookup('role_var', '_docker_stop_timeout', default=docker_labels_autoheal_timeout) }}"

docker_labels_custom_common: {}

docker_labels_saltbox_tmp:
  - com.github.saltbox.saltbox_managed: "true"
  - com.github.saltbox.saltbox_controller: "{{ 'true' if (lookup('role_var', '_docker_controller', default=true) | bool) else 'false' }}"
  - "{{ docker_labels_diun_template if (lookup('role_var', '_diun_enabled', default=docker_labels_diun_enabled) | bool) else omit }}"
  - "{{ docker_labels_autoheal_template if (lookup('role_var', '_autoheal_enabled', default=docker_labels_autoheal_enabled) | bool) else omit }}"
  - "{{ docker_labels_docker_depends_on_template if ((lookup('role_var', '_depends_on', default='') | length > 0) or docker_container_network_mode) else omit }}"
  - "{{ docker_labels_docker_depends_on_delay_template if ((lookup('role_var', '_depends_on_delay', default='') | length > 0) or docker_container_network_mode) else omit }}"
  - "{{ docker_labels_docker_depends_on_healthchecks_template if ((lookup('role_var', '_depends_on_healthchecks', default='') | length > 0) or docker_container_network_mode) else omit }}"
  - "{{ docker_labels_custom_common }}"

docker_container_network_mode: "{{ 'container:' in lookup('role_var', '_docker_network_mode', default=docker_networks_name_common) }}"
docker_container_network_mode_lookup: "{{ lookup('role_var', '_docker_network_mode', default=docker_networks_name_common) | split(':') | last }}"

docker_labels_saltbox: "{{ docker_labels_saltbox_tmp | reject('equalto', omit) | combine({}) }}"

docker_labels_traefik_main:
  - traefik.enable: "true"
  - '{ "traefik.http.routers.{{ traefik_router }}-http.entrypoints": "{{ traefik_entrypoint_web }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.service": "{{ traefik_router }}-http" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.rule": "{{ traefik_host_template }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.priority": "20" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.middlewares": "{{ lookup("role_var", "_traefik_middleware_http", default=traefik_default_middleware_http) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.entrypoints": "{{ traefik_entrypoint_websecure }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.rule": "{{ traefik_host_template }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.priority": "{{ lookup("role_var", "_traefik_priority", default="20") }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.tls.certresolver": "{{ lookup("role_var", "_traefik_certresolver", default=traefik_default_certresolver) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.middlewares": "{{ traefik_middleware }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.server.port": "{{ lookup("role_var", "_web_http_port", default=traefik_loadbalancer_port) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.server.scheme": "{{ lookup("role_var", "_web_http_scheme", default=traefik_loadbalancer_scheme) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.serverstransport": "{{ lookup("role_var", "_web_http_serverstransport", default=omit) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.server.port": "{{ traefik_loadbalancer_port }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.server.scheme": "{{ traefik_loadbalancer_scheme }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.serverstransport": "{{ lookup("role_var", "_web_serverstransport", default=omit) }}" }'

docker_labels_traefik_api:
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.entrypoints": "{{ traefik_entrypoint_web }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.rule": "{{ traefik_host_template }} && ({{ lookup("role_var", "_traefik_api_endpoint", default=omit) }})" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.priority": "30" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.middlewares": "{{ lookup("role_var", "_traefik_api_middleware_http", default=traefik_default_middleware_http_api) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.entrypoints": "{{ traefik_entrypoint_websecure }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.rule": "{{ traefik_host_template }} && ({{ lookup("role_var", "_traefik_api_endpoint", default=omit) }})" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.priority": "30" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.tls.certresolver": "{{ lookup("role_var", "_traefik_certresolver", default=traefik_default_certresolver) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.middlewares": "{{ lookup("role_var", "_traefik_api_middleware", default=traefik_default_middleware_api) }}" }'

docker_labels_traefik: "{{ docker_labels_traefik_main | combine(docker_labels_traefik_api)
                        if traefik_role_api_enabled
                        else docker_labels_traefik_main }}"

docker_labels_common: "{{ docker_labels_saltbox | combine(docker_labels_traefik)
                       if traefik_role_enabled
                       else docker_labels_saltbox }}"

docker_networks_name_common: saltbox

docker_networks_alias_template: "{{ [lookup('role_var', '_docker_networks_alias')]
                                    + lookup('role_var', '_docker_networks_alias_custom', default=[]) }}"

docker_networks_common:
  - name: "{{ docker_networks_name_common }}"
    aliases: "{{ docker_networks_alias_template }}"

dockerhub_is_enabled: "{{ (dockerhub is defined) and
                          (dockerhub is not none) and
                          (dockerhub | trim | length > 0) and
                          (dockerhub.user is defined) and
                          (dockerhub.user is not none) and
                          (dockerhub.user | trim | length > 0) and
                          (dockerhub.token is defined) and
                          (dockerhub.token is not none) and
                          (dockerhub.token | trim | length > 0) }}"

docker_log_driver_json: "json-file"

docker_log_driver: "{{ docker_log_driver_json
                    if docker.json_driver
                    else 'default' }}"

docker_log_options_json:
  tag: "{% raw %}'{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'{% endraw %}" # noqa jinja[spacing]

docker_log_options: "{{ docker_log_options_json
                     if docker.json_driver
                     else 'default' }}"

docker_network_container_health_delay: 5

docker_controller_url: "http://127.0.0.1:3377"

################################
# Saltbox Version Manager
################################

svm: https://svm.saltbox.dev/version?url=

################################
# Global Variables
################################

reboot_is_necessary: false
skip_dns: "{{ not (dns.ipv4 or dns.ipv6) }}"
role_dns_enabled: "{{ lookup('role_var', '_dns_enabled', default=true) | bool }}"
docker_legacy_volume: false
ansible_retry_count: "2"
ansible_retry_count_ci: "5"

################################
# Backup
################################

backup_rclone_transfers: 4
backup_rclone_drive_chunk_size: 128M
backup_rclone_dropbox_chunk_size: 128M

reverse_proxy_apps:
  - traefik

torrent_apps:
  - deluge
  - delugevpn
  - qbittorrent
  - qbittorrentvpn
  - rutorrent
  - transmission
  - transmissionvpn
