#########################################################################
# Title:         Saltbox: Backup | Snapshot                             #
# Author(s):     desimaniac, RXWatcher1                                 #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Snapshot | Determine '/' filesystem type"
  ansible.builtin.set_fact:
    root_fstype: "{{ item.fstype }}"
  when: backup_snapshot_enabled and (item.mount == '/')
  with_items:
    - "{{ ansible_mounts }}"

- name: "Snapshot | Determine '/opt' filesystem type"
  ansible.builtin.set_fact:
    opt_fstype: "{{ item.fstype }}"
  when: backup_snapshot_enabled and (item.mount == '/opt')
  with_items:
    - "{{ ansible_mounts }}"

# BTRFS

- name: Snapshot | BTRFS specific tasks
  when:
    - backup_snapshot_enabled
    - ((root_fstype is defined) and (root_fstype == 'btrfs')) or ((opt_fstype is defined) and (opt_fstype == 'btrfs'))
  block:
    - name: "Snapshot | Set general BTRFS variables"
      ansible.builtin.set_fact:
        snapshot_type: "btrfs"
        use_snapshot: true

    - name: "Snapshot | Set '/' BTRFS variables"
      ansible.builtin.set_fact:
        backup_snapshot_source_path: "/"
        backup_snapshot_destination_path: "/btrfs/snapshots/root"
        backup_opt_path: "/btrfs/snapshots/root/opt/"
      when: (root_fstype is defined) and (root_fstype == 'btrfs')

    - name: "Snapshot | Set '/opt' BTRFS variables"
      ansible.builtin.set_fact:
        backup_snapshot_source_path: "/opt"
        backup_snapshot_destination_path: "/opt/snapshots/opt"
        backup_opt_path: "/opt/snapshots/opt/"
      when: (opt_fstype is defined) and (opt_fstype == 'btrfs')

    - name: Snapshot | Check if BTRFS snapshot is mounted
      ansible.builtin.stat:
        path: "{{ backup_snapshot_destination_path }}"
      register: btrfs_snapshot_mounted

    - name: Snapshot | Delete BTRFS snapshot
      when: (btrfs_snapshot_mounted.stat.isdir is defined) and btrfs_snapshot_mounted.stat.isdir
      block:
        - name: Snapshot | Delete existing BTRFS snapshot (1/2)
          ansible.builtin.command: "btrfs subvolume delete {{ backup_snapshot_destination_path }}"
          register: snapshot_deletion
          ignore_errors: true

        - name: Snapshot | Delete existing BTRFS snapshot (2/2)
          ansible.builtin.file:
            path: "{{ backup_snapshot_destination_path }}"
            state: absent
          ignore_errors: true
          when: (snapshot_deletion is failed)

    - name: Snapshot | Create BTRFS snapshot directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0775"
      with_items:
        - "{{ backup_snapshot_destination_path | dirname }}"
