#########################################################################
# Title:         Saltbox: Jellyfin - Pre-install Tasks                  #
# Author(s):     kowalski, desimaniac, owine                            #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
################################
# Migrate old non hotio setup
################################

- name: Preinstall MIGRATE | Check if `{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') }}"
  register: jellyfin_xml_old

- name: Preinstall MIGRATE | New `{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') | basename }}` tasks
  when: jellyfin_xml_old.stat.exists
  block:
    - name: Preinstall MIGRATE | Import `{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') | basename }}` if it exists
      ansible.builtin.copy:
        src: "{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') }}"
        dest: "{{ lookup('role_var', '_paths_sys_xml_location', role='jellyfin') }}"
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0664"
        force: false

    - name: Preinstall MIGRATE | Remove old `{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') | basename }}` if it exists"
      ansible.builtin.file:
        path: "{{ lookup('role_var', '_paths_xml_loct_old', role='jellyfin') }}"
        state: absent

# Low priority as migrate should not be needed.
# Need to find out what other files need to be moved, network.xml - metadata, db's.
# Missing from nginx community role.

################################
# Register | STATS 'n' FACTS
################################

- name: Preinstall STAT | Check if `{{ lookup('role_var', '_paths_sys_xml_location', role='jellyfin') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_sys_xml_location', role='jellyfin') }}"
  register: jellyfin_sys_xml

- name: Preinstall STAT | Check also if `{{ lookup('role_var', '_paths_sys_xml_location', role='jellyfin') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_sys_xml_location', role='jellyfin') }}"
  register: jellyfin_existing_install

- name: Preinstall STAT | Check if `{{ lookup('role_var', '_paths_net_xml_location', role='jellyfin') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_net_xml_location', role='jellyfin') }}"
  register: network_xml

- name: Preinstall STAT | Check if `{{ lookup('role_var', '_paths_dlna_location', role='jellyfin') | basename }}` exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_dlna_location', role='jellyfin') }}"
  register: jellyfin_dlna

################################
# Block DLNA network spam
################################

- name: Import 'dlna.xml' config
  ansible.builtin.copy:
    src: "dlna.xml"
    dest: "{{ lookup('role_var', '_paths_dlna_location', role='jellyfin') }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0664"
    force: false
  when: (not jellyfin_dlna.stat.exists)

- name: Settings | Update 'network.xml' file
  community.general.xml:
    path: "{{ lookup('role_var', '_paths_net_xml_location', role='jellyfin') }}"
    xpath: "/NetworkConfiguration/{{ item.xpath }}"
    value: "{{ item.value }}"
  become: true
  become_user: "{{ user.name }}"
  loop: "{{ lookup('role_var', '_network_settings_list', role='jellyfin') }}"
  when: network_xml.stat.exists
