##########################################################################
# Title:         Saltbox: Plex | Reclaim Server                          #
# Author(s):     salty                                                   #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
- name: "Reclaim Server | Import plex_auth_token"
  ansible.builtin.include_role:
    name: plex_auth_token

- name: "Reclaim Server | Remove existing Docker container"
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: "Reclaim Server | Check if Preferences.xml exists"
  ansible.builtin.stat:
    path: "{{ plex_role_paths_config_location }}"
  register: plex_preferences_file

- name: "Reclaim Server | Extract existing MachineIdentifier from Preferences.xml"
  community.general.xml:
    path: "{{ plex_role_paths_config_location }}"
    xpath: "/Preferences/@MachineIdentifier"
    content: attribute
  register: existing_machine_identifier
  failed_when: false
  when: plex_preferences_file.stat.exists

- name: "Reclaim Server | Set MachineIdentifier variable"
  ansible.builtin.set_fact:
    plex_machine_identifier: "{{ existing_machine_identifier.matches[0].MachineIdentifier
                              if (existing_machine_identifier.matches is defined and existing_machine_identifier.matches | length > 0)
                              else plex_auth_client_identifier }}"

- name: "Reclaim Server | Get {{ plex_name | title }} claim code"
  ansible.builtin.uri:
    url: https://plex.tv/api/claim/token.json
    method: GET
    return_content: true
    body:
      X-Plex-Version: "{{ plex_auth_token_version }}"
      X-Plex-Product: "{{ plex_auth_token_product }}"
      X-Plex-Client-Identifier: "{{ plex_machine_identifier }}"
      X-Plex-Token: "{{ plex_auth_token }}"
    body_format: form-urlencoded
    headers:
      Accept: "application/json"
    status_code: 200
  environment: "{{ plex_proxy_dict }}"
  register: plex_claim

- name: "Reclaim Server | Set 'plex_claim_code' variable"
  ansible.builtin.set_fact:
    plex_claim_code: "{{ plex_claim.json.token }}"

- name: "Reclaim Server | Assert {{ plex_name | title }} claim code exists"
  ansible.builtin.assert:
    that:
      - plex_claim_code is defined
      - plex_claim_code is not none
      - plex_claim_code | trim | length > 0
    quiet: true

- name: "Reclaim Server | Display {{ plex_name | title }} claim code"
  ansible.builtin.debug:
    msg: "Using Plex Claim Code {{ plex_claim_code }}"

- name: "Reclaim Server | Remove existing PlexOnlineToken from Preferences.xml"
  ansible.builtin.replace:
    path: "{{ plex_role_paths_config_location }}"
    regexp: ' PlexOnlineToken="[^"]*"'
    replace: ''
  when: plex_preferences_file.stat.exists
