##########################################################################
# Title:         Saltbox: Plex | Default Variables                       #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

plex_instances: ["plex"]

################################
# Settings
################################

# Do not enable globally if deploying multiple instances
plex_role_open_main_ports: false
# Do not enable globally if deploying multiple instances
plex_role_open_local_ports: false
plex_role_plugin_webtools: false
plex_role_plugin_sub_zero: false
# Disables Traefik's HTTP to HTTPS redirect for Plex
# Allows older clients with certificate issues to connect insecurely
plex_role_insecure: false
# Adds the IP specified here to the advertised urls Plex broadcasts to clients
# Useful to avoid traffic going through your WAN when hairpin NAT is not available
plex_role_lan_ip: ""
# For instances this works the same as usual plex2_auth_token_proxy for an instance named plex2.
plex_role_auth_token_proxy: ""

################################
# Proxy
################################

# Do not edit or override using the inventory
plex_proxy_dict:
  http_proxy: "{{ plex_role_proxy_lookup if (plex_role_proxy_lookup | length > 0) else '' }}"
  https_proxy: "{{ plex_role_proxy_lookup if (plex_role_proxy_lookup | length > 0) else '' }}"

# Do not edit or override using the inventory
plex_role_proxy_lookup: "{{ lookup('role_var', '_auth_token_proxy', role='plex') }}"
# Do not edit or override using the inventory
plex_role_network_modes: []

################################
# Paths
################################

plex_role_paths_folder: "{{ plex_name }}"
plex_role_paths_location: "{{ server_appdata_path }}/{{ plex_role_paths_folder }}"
plex_role_paths_transcodes_location: "{{ transcodes_path }}/{{ plex_role_paths_folder }}"
plex_role_paths_folders_list:
  - "{{ plex_role_paths_location }}"
  - "{{ plex_role_paths_location }}/Library"
  - "{{ plex_role_paths_location }}/Library/Application Support"
  - "{{ plex_role_paths_location }}/Library/Application Support/Plex Media Server"
  - "{{ plex_role_paths_location }}/Library/Application Support/Plex Media Server/Plug-ins"
  - "{{ plex_role_paths_location }}/Library/Logs"
  - "{{ plex_role_paths_location }}/Library/Logs/Plex Media Server"
  - "{{ plex_role_paths_transcodes_location }}"
plex_role_paths_application_support_location: "{{ plex_role_paths_location }}/Library/Application Support/Plex Media Server"
plex_role_paths_config_location: "{{ plex_role_paths_application_support_location }}/Preferences.xml"
plex_role_paths_log_location: "{{ plex_role_paths_application_support_location }}/Logs"
plex_role_paths_plugins_location: "{{ plex_role_paths_application_support_location }}/Plug-ins"
plex_role_paths_plugin_support_location: "{{ plex_role_paths_application_support_location }}/Plug-in Support"
plex_role_paths_db_location: "{{ plex_role_paths_plugin_support_location }}/Databases/com.plexapp.plugins.library.db"
plex_role_paths_db_blobs_location: "{{ plex_role_paths_plugin_support_location }}/Databases/com.plexapp.plugins.library.blobs.db"

################################
# Web
################################

plex_role_web_subdomain: "{{ plex_name }}"
plex_role_web_domain: "{{ user.domain }}"
plex_role_web_port: "32400"
# Do not edit or override using the inventory
plex_role_web_scheme: "https"
plex_role_web_http_port: "32400"
# Do not edit or override using the inventory
plex_role_web_http_scheme: "http"
plex_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='plex') + '.' + lookup('role_var', '_web_domain', role='plex')
                    if (lookup('role_var', '_web_subdomain', role='plex') | length > 0)
                    else lookup('role_var', '_web_domain', role='plex')) }}"
plex_role_webtools_web_subdomain: "{{ plex_name }}-webtools"
plex_role_webtools_web_domain: "{{ lookup('role_var', '_web_domain', role='plex') }}"
plex_role_webtools_web_port: "33400"
plex_role_webtools_host: "{{ lookup('role_var', '_webtools_web_subdomain', role='plex') + '.' + lookup('role_var', '_webtools_web_domain', role='plex') }}"
plex_role_web_insecure_url: "{{ 'http://' + (lookup('role_var', '_web_subdomain', role='plex') + '.' + lookup('role_var', '_web_domain', role='plex')
                             if (lookup('role_var', '_web_subdomain', role='plex') | length > 0)
                             else lookup('role_var', '_web_domain', role='plex')) }}"

################################
# DNS
################################

plex_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='plex') }}"
plex_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='plex') }}"
plex_role_dns_proxy: "{{ dns_proxied }}"
plex_role_webtools_dns_record: "{{ lookup('role_var', '_webtools_web_subdomain', role='plex') }}"
plex_role_webtools_dns_zone: "{{ lookup('role_var', '_webtools_web_domain', role='plex') }}"
plex_role_webtools_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

plex_role_traefik_sso_middleware: ""
plex_role_traefik_middleware_default: "{{ traefik_default_middleware
                                          + (',themepark-' + plex_name
                                            if (lookup('role_var', '_themepark_enabled', role='plex') and global_themepark_plugin_enabled)
                                            else '') }}"
plex_role_traefik_middleware_custom: ""
plex_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
plex_role_traefik_enabled: true
plex_role_traefik_api_enabled: false
plex_role_traefik_api_endpoint: ""
plex_role_traefik_error_pages_enabled: false
plex_role_traefik_gzip_enabled: false
plex_role_traefik_middleware_http_insecure: "{{ lookup('role_var', '_insecure', role='plex') | bool }}"
plex_role_web_serverstransport: "skipverify@file"

plex_role_webtools_traefik_sso_middleware: ""
plex_role_webtools_traefik_middleware_default: "{{ traefik_default_middleware
                                                   + (',' + lookup('role_var', '_webtools_traefik_sso_middleware', role='plex')
                                                     if (lookup('role_var', '_webtools_traefik_sso_middleware', role='plex') | length > 0)
                                                     else '') }}"
plex_role_webtools_traefik_middleware_custom: ""
plex_role_webtools_traefik_middleware: "{{ lookup('role_var', '_webtools_traefik_middleware_default', role='plex')
                                           + (',' + lookup('role_var', '_webtools_traefik_middleware_custom', role='plex')
                                             if (not lookup('role_var', '_webtools_traefik_middleware_custom', role='plex').startswith(',') and lookup('role_var', '_webtools_traefik_middleware_custom', role='plex') | length > 0)
                                             else lookup('role_var', '_webtools_traefik_middleware_custom', role='plex')) }}"
plex_role_webtools_traefik_certresolver: "{{ traefik_default_certresolver }}"
plex_role_webtools_traefik_router: "{{ lookup('role_var', '_webtools_web_subdomain', role='plex') }}"

################################
# Theme
################################

plex_role_themepark_enabled: false
# Do not edit or override using the inventory
plex_role_themepark_app: "plex"
# Options can be found at https://docs.theme-park.dev/themes/plex/
plex_role_themepark_theme: "{{ global_themepark_theme }}"
# Allows you to override the url where CSS files can be found
plex_role_themepark_domain: "{{ global_themepark_domain }}"
# Options can be found at https://docs.theme-park.dev/themes/addons/
plex_role_themepark_addons: []

################################
# Docker
################################

# Container
plex_role_docker_container: "{{ plex_name }}"

# Image
plex_role_docker_image_pull: true
plex_role_docker_image_repo: "plexinc/pms-docker"
plex_role_docker_image_tag: "latest"
plex_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='plex') }}:{{ lookup('role_var', '_docker_image_tag', role='plex') }}"

# Ports
plex_role_docker_ports_32400: "{{ port_lookup_32400.meta.port
                               if (port_lookup_32400.meta.port is defined) and (port_lookup_32400.meta.port | trim | length > 0)
                               else '32400' }}"

plex_role_docker_ports_defaults: []
# Skip docs
plex_role_docker_ports_local:
  - "1900:1900/udp"
  - "5353:5353/udp"
  - "8324:8324"
  - "32410:32410/udp"
  - "32412:32412/udp"
  - "32414:32414/udp"
  - "32469:32469"
# Skip docs
plex_role_docker_ports_ui:
  - "{{ plex_role_docker_ports_32400 }}:{{ lookup('vars', plex_name + '_web_port', default=plex_role_web_port) }}"
plex_role_docker_ports_custom: []
plex_role_docker_ports: "{{ lookup('role_var', '_docker_ports_defaults', role='plex')
                            + lookup('role_var', '_docker_ports_custom', role='plex')
                            + (plex_role_docker_ports_local
                              if (lookup('role_var', '_open_local_ports', role='plex'))
                              else [])
                            + (plex_role_docker_ports_ui
                              if lookup('role_var', '_open_main_ports', role='plex')
                              else []) }}"

# Envs
plex_role_docker_envs_advertise_ip_url: "{{ lookup('role_var', '_web_url', role='plex') + ':443,' + lookup('role_var', '_web_insecure_url', role='plex') + ':80'
                                         if lookup('role_var', '_insecure', role='plex')
                                         else lookup('role_var', '_web_url', role='plex') + ':443' }}"
plex_role_docker_envs_advertise_ip: "{{ 'http://' + lookup('role_var', '_lan_ip', role='plex') + ':32400,' + lookup('role_var', '_docker_envs_advertise_ip_url', role='plex')
                                     if (lookup('role_var', '_lan_ip', role='plex') | length > 0) and lookup('role_var', '_open_main_ports', role='plex')
                                     else lookup('role_var', '_docker_envs_advertise_ip_url', role='plex') }}"
plex_role_docker_envs_default:
  PLEX_UID: "{{ uid }}"
  PLEX_GID: "{{ gid }}"
  PLEX_CLAIM: "{{ (plex_claim_code) | default(omit) }}"
  CHANGE_CONFIG_DIR_OWNERSHIP: "false"
  TZ: "{{ tz }}"
  ADVERTISE_IP: "{{ lookup('role_var', '_docker_envs_advertise_ip', role='plex') }}"
plex_role_docker_envs_custom: {}
plex_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='plex')
                           | combine(lookup('role_var', '_docker_envs_custom', role='plex')) }}"

# Volumes
plex_role_docker_volumes_default:
  - "{{ plex_role_paths_location }}:/config"
  - "{{ server_appdata_path }}/scripts:/scripts"
  - "/dev/shm:/dev/shm"
  - "{{ plex_role_paths_transcodes_location }}:/transcode"
plex_role_docker_volumes_legacy:
  - "/mnt/unionfs/Media:/data"
plex_role_docker_volumes_custom: []
plex_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='plex')
                              + lookup('role_var', '_docker_volumes_custom', role='plex')
                              + (lookup('role_var', '_docker_volumes_legacy', role='plex')
                                if docker_legacy_volume
                                else []) }}"

# Mounts
plex_role_docker_mounts_default:
  - target: /tmp
    type: tmpfs
plex_role_docker_mounts_custom: []
plex_role_docker_mounts: "{{ lookup('role_var', '_docker_mounts_default', role='plex')
                             + lookup('role_var', '_docker_mounts_custom', role='plex') }}"

# Hosts
plex_role_docker_hosts_default:
  metric.plex.tv: "{{ ip_address_localhost }}"
  metrics.plex.tv: "{{ ip_address_localhost }}"
  analytics.plex.tv: "{{ ip_address_localhost }}"
plex_role_docker_hosts_custom: {}
plex_role_docker_hosts: "{{ lookup('role_var', '_docker_hosts_default', role='plex')
                            | combine(lookup('role_var', '_docker_hosts_custom', role='plex')) }}"

# Labels
plex_role_docker_labels_default:
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}-http.entrypoints": "web" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}-http.service": "{{ lookup("role_var", "_webtools_web_subdomain", role="plex") }}" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}-http.rule": "Host(`{{ lookup("role_var", "_webtools_host", role="plex") }}`)" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}-http.middlewares": "{{ traefik_default_middleware_http }}" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}-http.priority": "20" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.entrypoints": "websecure" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.service": "{{ lookup("role_var", "_webtools_web_subdomain", role="plex") }}" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.rule": "Host(`{{ lookup("role_var", "_webtools_host", role="plex") }}`)" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.tls.certresolver": "{{ plex_role_webtools_traefik_certresolver }}" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.middlewares": "{{ plex_role_webtools_traefik_middleware }}" }'
  - '{ "traefik.http.routers.{{ plex_role_webtools_traefik_router }}.priority": "20" }'
  - '{ "traefik.http.services.{{ plex_role_webtools_traefik_router }}.loadbalancer.server.port": "{{ lookup("role_var", "_web_port", role="plex") }}" }'
plex_role_docker_labels_custom: {}
plex_role_docker_labels: "{{ (lookup('role_var', '_docker_labels_default', role='plex') if lookup('role_var', '_plugin_webtools', role='plex') else {})
                              | combine((traefik_themepark_labels
                                        if (lookup('role_var', '_themepark_enabled', role='plex') and global_themepark_plugin_enabled)
                                        else {}),
                                        lookup('role_var', '_docker_labels_custom', role='plex')) }}"

# Hostname
plex_role_docker_hostname: "{{ plex_name }}"

# Networks
plex_role_docker_networks_alias: "{{ plex_name }}"
plex_role_docker_networks_default: []
plex_role_docker_networks_custom: []
plex_role_docker_networks: "{{ docker_networks_common
                               + lookup('role_var', '_docker_networks_default', role='plex')
                               + lookup('role_var', '_docker_networks_custom', role='plex') }}"

# Restart Policy
plex_role_docker_restart_policy: unless-stopped

# State
plex_role_docker_state: started
