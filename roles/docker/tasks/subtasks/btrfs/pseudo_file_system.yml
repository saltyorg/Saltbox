#########################################################################
# Title:         Saltbox: Docker | BTRFS | Psuedo-File-System Tasks     #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
# https://gist.github.com/hopeseekr/cd2058e71d01deca5bae9f4e5a555440

- name: "BTRFS | Psuedo-File-System | Determine if '/var/lib/docker' is mounted"
  ansible.builtin.set_fact:
    var_lib_docker_mount_exists: "{{ true if (ansible_mounts | json_query('[?mount == `/var/lib/docker`]')) else false }}"

- name: BTRFS | Psuedo-File-System | Tasks when '/var/lib/docker' is not mounted
  when: (not var_lib_docker_mount_exists)
  block:
    - name: BTRFS | Psuedo-File-System | Create blank '{{ docker_filesystem_path }}'
      ansible.builtin.file:
        path: "{{ docker_filesystem_path }}"
        attributes: "+C"
        mode: "0644"
        state: touch

    - name: BTRFS | Psuedo-File-System | Set size on '{{ docker_filesystem_path }}'
      community.general.filesize:
        path: "{{ docker_filesystem_path }}"
        size: "{{ docker_filesystem_size }}"

    - name: BTRFS | Psuedo-File-System | Create pseudo filesystem
      community.general.filesystem:
        fstype: ext4
        dev: "{{ docker_filesystem_path }}"

    - name: BTRFS | Psuedo-File-System | Stop docker service
      ansible.builtin.systemd_service:
        name: docker
        state: stopped

    - name: BTRFS | Psuedo-File-System | Stop docker socket
      ansible.builtin.systemd_service:
        name: docker.socket
        state: stopped

    - name: BTRFS | Psuedo-File-System | Wait for 30 seconds before commencing
      ansible.builtin.wait_for:
        timeout: 30

    - name: BTRFS | Psuedo-File-System | Remove '/var/lib/docker' if it exists
      ansible.builtin.file:
        path: /var/lib/docker
        state: absent

    - name: BTRFS | Psuedo-File-System | Mount pseudo-file-system
      ansible.posix.mount:
        name: /var/lib/docker
        src: "{{ docker_filesystem_path }}"
        fstype: ext4
        opts: loop
        state: mounted

- name: BTRFS | Pseudo-File-System | Resize pseudo-file-system
  when: ('docker-filesystem-resize' in ansible_run_tags)
  block:
    - name: BTRFS | Psuedo-File-System | Stop docker service
      ansible.builtin.systemd_service:
        name: docker
        state: stopped

    - name: BTRFS | Psuedo-File-System | Stop docker socket
      ansible.builtin.systemd_service:
        name: docker.socket
        state: stopped

    - name: BTRFS | Psuedo-File-System | Unmount pseudo-file-system
      ansible.posix.mount:
        name: /var/lib/docker
        state: unmounted

    - name: BTRFS | Psuedo-File-System | Resize '{{ docker_filesystem_path }}'
      community.general.filesize:
        path: "{{ docker_filesystem_path }}"
        size: "{{ docker_filesystem_size }}"

    - name: BTRFS | Psuedo-File-System | Run e2fsck on '{{ docker_filesystem_path }}'
      ansible.builtin.shell: e2fsck -fy {{ docker_filesystem_path }}

    - name: BTRFS | Psuedo-File-System | Extend pseudo filesystem
      community.general.filesystem:
        fstype: ext4
        dev: "{{ docker_filesystem_path }}"
        resizefs: true

    - name: BTRFS | Psuedo-File-System | Wait for 30 seconds before commencing
      ansible.builtin.wait_for:
        timeout: 30

    - name: BTRFS | Psuedo-File-System | Remove '/var/lib/docker' if it exists
      ansible.builtin.file:
        path: /var/lib/docker
        state: absent

    - name: BTRFS | Psuedo-File-System | Mount pseudo-file-system
      ansible.posix.mount:
        name: /var/lib/docker
        src: "{{ docker_filesystem_path }}"
        fstype: ext4
        opts: loop
        state: mounted
