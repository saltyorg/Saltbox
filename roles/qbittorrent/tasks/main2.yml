#########################################################################
# Title:            Saltbox: qBittorrent                                #
# Author(s):        Kalroth, salty                                      #
# URL:              https://github.com/saltyorg/Saltbox                 #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Remove '{{ qbittorrent_name }}' from hosts
  ansible.builtin.blockinfile:
    path: "/etc/hosts"
    marker: "# {mark} ANSIBLE {{ qbittorrent_name }} MANAGED BLOCK"
    block: ""

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Check if legacy '{{ qbittorrent_name }}.service' exists
  ansible.builtin.stat:
    path: "/etc/systemd/system/{{ qbittorrent_name }}.service"
  register: qbittorrent_legacy_service

- name: "Execute legacy tasks"
  ansible.builtin.include_tasks: subtasks/legacy.yml
  when: qbittorrent_legacy_service.stat.exists

- name: Check if '{{ qbittorrent_role_service_name }}' exists
  ansible.builtin.stat:
    path: "/etc/systemd/system/{{ qbittorrent_role_service_name }}"
  register: qbittorrent_service

- name: Stop '{{ qbittorrent_role_service_name }}'
  ansible.builtin.systemd_service:
    name: "{{ qbittorrent_role_service_name }}"
    state: stopped
  when: qbittorrent_service.stat.exists

- name: Remove '{{ qbittorrent_role_service_name }}' file
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ qbittorrent_role_service_name }}"
    state: absent
  when: qbittorrent_service.stat.exists and (not lookup('role_var', '_host_install', role='qbittorrent'))

- name: Remove '{{ qbittorrent_name }}-nox' file
  ansible.builtin.file:
    path: "/usr/bin/{{ qbittorrent_name }}-nox"
    state: absent
  when: qbittorrent_service.stat.exists and (not lookup('role_var', '_host_install', role='qbittorrent'))

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Check if config file exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_conf', role='qbittorrent') }}"
  register: qbittorrent_role_paths_conf_stat

- name: Pre-Install Tasks
  ansible.builtin.include_tasks: "subtasks/pre-install/main.yml"

- name: Host Install
  when: lookup('role_var', '_host_install', role='qbittorrent')
  block:
    - name: Add '{{ qbittorrent_name }}' to hosts
      ansible.builtin.blockinfile:
        path: "/etc/hosts"
        marker: "# {mark} ANSIBLE {{ qbittorrent_name }} MANAGED BLOCK"
        block: |
          172.19.0.1 {{ qbittorrent_name }}

    - name: Get Download Url
      ansible.builtin.shell: "{{ lookup('role_var', '_host_version', role='qbittorrent') }}"
      register: qbittorrent_release_version

    - name: Download 'qbittorrent-nox'
      ansible.builtin.get_url:
        url: "{{ lookup('role_var', '_host_download_url', role='qbittorrent') }}"
        dest: "/usr/bin/{{ qbittorrent_name }}-nox"
        mode: "0755"
        force: true

    - name: Import '{{ qbittorrent_name }}.service'
      ansible.builtin.template:
        src: "qbittorrent.service.j2"
        dest: "/etc/systemd/system/{{ qbittorrent_role_service_name }}"
        mode: "0644"
        force: true

    - name: Systemd daemon-reload '{{ qbittorrent_role_service_name }}'
      ansible.builtin.systemd_service:
        name: "{{ qbittorrent_role_service_name }}"
        state: stopped
        enabled: false
        daemon_reload: true

    - name: Start '{{ qbittorrent_role_service_name }}'
      ansible.builtin.systemd_service:
        name: "{{ qbittorrent_role_service_name }}"
        state: started
        enabled: true

- name: Docker Install
  when: not lookup('role_var', '_host_install', role='qbittorrent')
  block:
    - name: Remove '{{ qbittorrent_name }}' from hosts
      ansible.builtin.blockinfile:
        path: "/etc/hosts"
        marker: "# {mark} ANSIBLE {{ qbittorrent_name }} MANAGED BLOCK"
        state: absent

    - name: Create Docker container
      ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"

- name: Post-Install Tasks
  ansible.builtin.include_tasks: "subtasks/post-install/main.yml"
  when: (not qbittorrent_role_paths_conf_stat.stat.exists)
