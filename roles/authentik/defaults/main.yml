##########################################################################
# Title:         Saltbox: Authentik | Default Variables                  #
# Author(s):     salty                                                   #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

authentik_name: authentik

################################
# Settings
################################

authentik_role_email_host: "localhost"
authentik_role_email_port: "25"
authentik_role_email_username: ""
authentik_role_email_password: ""
authentik_role_email_tls: "false"
authentik_role_email_ssl: "false"
authentik_role_email_timeout: "10"
authentik_role_email_from: "authentik@localhost"
authentik_role_access_token_validity: "24" # Hours, only fresh installs use this

################################
# Redis
################################

authentik_role_redis_name: "{{ authentik_name }}-redis"
authentik_role_redis_docker_healthcheck:
  interval: 30s
  retries: 5
  start_period: 20s
  test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
  timeout: 3s

################################
# Postgres
################################

# Authentik will always require postgres, this just allows you to skip the one Saltbox deploys
authentik_role_postgres_deploy: true
authentik_role_postgres_name: "{{ authentik_name }}-postgres"
authentik_role_postgres_user: "{{ postgres_role_docker_env_user }}"
authentik_role_postgres_password: "{{ postgres_role_docker_env_password }}"
authentik_role_postgres_docker_env_db: "authentik"
authentik_role_postgres_docker_image_tag: "16-alpine"
authentik_role_postgres_docker_image_repo: "postgres"
authentik_role_postgres_docker_healthcheck:
  test: ["CMD-SHELL", "pg_isready -d {{ lookup('role_var', '_postgres_docker_env_db', role='authentik') }} -U {{ postgres_role_docker_env_user }}"]
  start_period: 20s
  interval: 30s
  retries: 5
  timeout: 5s

################################
# Paths
################################

authentik_role_paths_folder: "{{ authentik_name }}"
authentik_role_paths_location: "{{ server_appdata_path }}/{{ authentik_role_paths_folder }}"
authentik_role_paths_folders_list:
  - "{{ authentik_role_paths_location }}"
  - "{{ authentik_role_paths_location }}/media"
  - "{{ authentik_role_paths_location }}/custom-templates"
  - "{{ authentik_role_paths_location }}/certs"

################################
# Web
################################

authentik_role_web_subdomain: "auth"
authentik_role_web_domain: "{{ user.domain }}"
authentik_role_web_port: "9000"
authentik_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='authentik') + '.' + lookup('role_var', '_web_domain', role='authentik')
                         if (lookup('role_var', '_web_subdomain', role='authentik') | length > 0)
                         else lookup('role_var', '_web_domain', role='authentik')) }}"
authentik_role_web_host: "{{ (lookup('role_var', '_web_subdomain', role='authentik') + '.' + lookup('role_var', '_web_domain', role='authentik')
                          if (lookup('role_var', '_web_subdomain', role='authentik') | length > 0)
                          else lookup('role_var', '_web_domain', role='authentik')) }}"

################################
# DNS
################################

authentik_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='authentik') }}"
authentik_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='authentik') }}"
authentik_role_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

authentik_role_traefik_sso_middleware: ""
authentik_role_traefik_middleware_default: "{{ traefik_default_middleware }}"
authentik_role_traefik_middleware_custom: ""
authentik_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
authentik_role_traefik_enabled: true
authentik_role_traefik_api_enabled: false
authentik_role_traefik_api_endpoint: ""
authentik_role_traefik_outpost_catch_all: false

################################
# Setup
################################

authentik_role_host: "http://{{ authentik_name }}:{{ lookup('role_var', '_web_port', role='authentik') }}"
authentik_role_default_user: "akadmin"
authentik_role_response_headers:
  - "X-authentik-username"
  - "X-authentik-groups"
  - "X-authentik-entitlements"
  - "X-authentik-email"
  - "X-authentik-name"
  - "X-authentik-uid"
  - "X-authentik-jwt"
  - "X-authentik-meta-jwks"
  - "X-authentik-meta-outpost"
  - "X-authentik-meta-provider"
  - "X-authentik-meta-app"
  - "X-authentik-meta-version"

################################
# Docker
################################

# Container
authentik_role_docker_container: "{{ authentik_name }}"

# Image
authentik_role_docker_image_pull: true
authentik_role_docker_image_repo: "ghcr.io/goauthentik/server"
authentik_role_docker_image_tag: "2025.8"
authentik_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='authentik') }}:{{ lookup('role_var', '_docker_image_tag', role='authentik') }}"

# Envs
authentik_role_docker_envs_default:
  AUTHENTIK_REDIS__HOST: authentik-redis
  AUTHENTIK_POSTGRESQL__HOST: "{{ lookup('role_var', '_postgres_name', role='authentik') }}"
  AUTHENTIK_POSTGRESQL__USER: "{{ lookup('role_var', '_postgres_user', role='authentik') }}"
  AUTHENTIK_POSTGRESQL__NAME: "{{ lookup('role_var', '_postgres_docker_env_db', role='authentik') }}"
  AUTHENTIK_POSTGRESQL__PASSWORD: "{{ lookup('role_var', '_postgres_password', role='authentik') }}"
  AUTHENTIK_SECRET_KEY: "{{ authentik_saltbox_facts.facts.secret_key }}"
  AUTHENTIK_BOOTSTRAP_TOKEN: "{{ omit if authentik_data_folder.stat.exists else authentik_bootstrap_token }}"
  AUTHENTIK_EMAIL__HOST: "{{ lookup('role_var', '_email_host', role='authentik') }}"
  AUTHENTIK_EMAIL__PORT: "{{ lookup('role_var', '_email_port', role='authentik') }}"
  AUTHENTIK_EMAIL__USERNAME: "{{ lookup('role_var', '_email_username', role='authentik') }}"
  AUTHENTIK_EMAIL__PASSWORD: "{{ lookup('role_var', '_email_password', role='authentik') }}"
  AUTHENTIK_EMAIL__USE_TLS: "{{ lookup('role_var', '_email_tls', role='authentik') }}"
  AUTHENTIK_EMAIL__USE_SSL: "{{ lookup('role_var', '_email_ssl', role='authentik') }}"
  AUTHENTIK_EMAIL__TIMEOUT: "{{ lookup('role_var', '_email_timeout', role='authentik') }}"
  AUTHENTIK_EMAIL__FROM: "{{ lookup('role_var', '_email_from', role='authentik') }}"
  AUTHENTIK_LISTEN__TRUSTED_PROXY_CIDRS: "172.19.0.0/16"
authentik_role_docker_envs_custom: {}
authentik_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='authentik')
                                | combine(lookup('role_var', '_docker_envs_custom', role='authentik')) }}"

# Commands
authentik_role_docker_commands_default:
  - "server"
authentik_role_docker_commands_custom: []
authentik_role_docker_commands: "{{ lookup('role_var', '_docker_commands_default', role='authentik')
                                    + lookup('role_var', '_docker_commands_custom', role='authentik') }}"

# Volumes
authentik_role_docker_volumes_default:
  - "{{ authentik_role_paths_location }}/media:/media"
  - "{{ authentik_role_paths_location }}/custom-templates:/templates"
authentik_role_docker_volumes_custom: []
authentik_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='authentik')
                                   + lookup('role_var', '_docker_volumes_custom', role='authentik') }}"

# Labels
authentik_role_docker_labels_default:
  traefik.http.routers.authentik-outpost-http.entrypoints: "web"
  traefik.http.routers.authentik-outpost-http.service: "authentik-outpost-http"
  traefik.http.routers.authentik-outpost-http.rule: "PathPrefix(`/outpost.goauthentik.io/`)"
  traefik.http.routers.authentik-outpost-http.middlewares: "{{ traefik_default_middleware_http }}"
  traefik.http.routers.authentik-outpost-http.priority: "99"
  traefik.http.routers.authentik-outpost.entrypoints: "websecure"
  traefik.http.routers.authentik-outpost.service: "authentik-outpost"
  traefik.http.routers.authentik-outpost.rule: "PathPrefix(`/outpost.goauthentik.io/`)"
  traefik.http.routers.authentik-outpost.tls.options: "securetls@file"
  traefik.http.routers.authentik-outpost.tls.certresolver: "{{ authentik_role_traefik_certresolver }}"
  traefik.http.routers.authentik-outpost.middlewares: "{{ traefik_default_middleware }}"
  traefik.http.routers.authentik-outpost.priority: "99"
  traefik.http.services.authentik-outpost-http.loadbalancer.server.port: "{{ lookup('role_var', '_web_port', role='authentik') }}"
  traefik.http.services.authentik-outpost.loadbalancer.server.port: "{{ lookup('role_var', '_web_port', role='authentik') }}"
authentik_role_docker_labels_custom: {}
authentik_role_docker_labels: "{{ lookup('role_var', '_docker_labels_default', role='authentik')
                                  | combine(lookup('role_var', '_docker_labels_custom', role='authentik')) }}"

# Hostname
authentik_role_docker_hostname: "{{ authentik_name }}"

# Networks
authentik_role_docker_networks_alias: "{{ authentik_name }}"
authentik_role_docker_networks_default: []
authentik_role_docker_networks_custom: []
authentik_role_docker_networks: "{{ docker_networks_common
                                    + lookup('role_var', '_docker_networks_default', role='authentik')
                                    + lookup('role_var', '_docker_networks_custom', role='authentik') }}"

# Restart Policy
authentik_role_docker_restart_policy: unless-stopped

# State
authentik_role_docker_state: started

# Dependencies
authentik_role_depends_on: "{{ authentik_name }}-redis,{{ lookup('role_var', '_postgres_name', role='authentik') }}"
authentik_role_depends_on_delay: "0"
authentik_role_depends_on_healthchecks: "true"
