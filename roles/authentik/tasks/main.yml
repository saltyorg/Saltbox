#########################################################################
# Title:         Saltbox: Authentik Role                                #
# Author(s):     salty                                                  #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Remove existing Docker containers
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"
  vars:
    var_prefix: "{{ item }}"
  loop:
    - "{{ authentik_name }}"
    - "authentik-worker"
    - "authentik-redis"
    - "authentik-postgres"

- name: Reset Authentik directory
  ansible.builtin.file:
    path: "{{ lookup('role_var', '_paths_location', role='authentik') }}"
    state: absent
  when: ('authentik-reset' in ansible_run_tags)

- name: Check if '{{ lookup('role_var', '_paths_location', role='authentik') }}' exists
  ansible.builtin.stat:
    path: "{{ lookup('role_var', '_paths_location', role='authentik') }}"
  register: authentik_data_folder

- name: Generate Bootstrap Token
  ansible.builtin.set_fact:
    authentik_bootstrap_token: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
  when: (not authentik_data_folder.stat.exists)

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: "Import Redis Role"
  ansible.builtin.include_role:
    name: redis
  vars:
    redis_instances: ["{{ lookup('role_var', '_redis_name', role='authentik') }}"]
    redis_role_docker_image_tag: "alpine"
    redis_role_paths_folder: "{{ lookup('role_var', '_paths_folder', role='authentik') }}/redis"
    redis_role_paths_location: "{{ server_appdata_path }}/{{ redis_role_paths_folder }}"
    redis_role_docker_healthcheck: "{{ lookup('role_var', '_redis_docker_healthcheck', role='authentik') }}"
    redis_role_docker_commands_default:
      - "--save 60 1 --loglevel warning"

- name: "Import Postgres Role"
  ansible.builtin.include_role:
    name: postgres
  vars:
    postgres_instances: ["{{ lookup('role_var', '_postgres_name', role='authentik') }}"]
    postgres_role_docker_image_tag: "{{ lookup('role_var', '_postgres_docker_image_tag', role='authentik') }}"
    postgres_role_docker_image_repo: "{{ lookup('role_var', '_postgres_docker_image_repo', role='authentik') }}"
    postgres_role_paths_folder: "{{ lookup('role_var', '_paths_folder', role='authentik') }}/postgres"
    postgres_role_paths_location: "{{ server_appdata_path }}/{{ postgres_role_paths_folder }}"
    postgres_role_docker_env_db: "{{ lookup('role_var', '_postgres_docker_env_db', role='authentik') }}"
    postgres_role_docker_healthcheck: "{{ lookup('role_var', '_postgres_docker_healthcheck', role='authentik') }}"
  when: lookup('role_var', '_postgres_deploy', role='authentik')

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: "Save Authentik Saltbox facts"
  saltbox_facts:
    role: "authentik"
    instance: "authentik"
    keys:
      secret_key: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=50) }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
  register: authentik_saltbox_facts

- name: "Wait for {{ lookup('role_var', '_redis_name', role='authentik') }} container to be healthy"
  community.docker.docker_container_info:
    name: "{{ lookup('role_var', '_redis_name', role='authentik') }}"
  until: "authentik_redis_container_info.container.State.Health.Status == 'healthy'"
  register: authentik_redis_container_info
  retries: 15
  delay: 10

- name: "Wait for {{ lookup('role_var', '_postgres_name', role='authentik') }} container to be healthy"
  community.docker.docker_container_info:
    name: "{{ lookup('role_var', '_postgres_name', role='authentik') }}"
  until: "authentik_postgres_container_info.container.State.Health.Status == 'healthy'"
  register: authentik_postgres_container_info
  retries: 15
  delay: 10

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"

- name: "Import Authentik Worker Role"
  ansible.builtin.include_role:
    name: authentik_worker

- name: Setup Task
  ansible.builtin.include_tasks: "subtasks/setup.yml"
  when: (not authentik_data_folder.stat.exists) and not continuous_integration
