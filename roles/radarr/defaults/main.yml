##########################################################################
# Title:         Saltbox: Radarr | Default Variables                     #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

radarr_instances: ["radarr"]

################################
# Settings
################################

radarr_external_auth: true

################################
# Paths
################################

radarr_paths_folder: "{{ radarr_name }}"
radarr_paths_location: "{{ server_appdata_path }}/{{ radarr_paths_folder }}"
radarr_paths_folders_list:
  - "{{ radarr_paths_location }}"
radarr_paths_config_location: "{{ radarr_paths_location }}/config.xml"

################################
# Web
################################

radarr_web_subdomain: "{{ radarr_name }}"
radarr_web_domain: "{{ user.domain }}"
radarr_web_port: "7878"
radarr_web_url: "{{ 'https://' + (lookup('vars', radarr_name + '_web_subdomain', default=radarr_web_subdomain) + '.' + lookup('vars', radarr_name + '_web_domain', default=radarr_web_domain)
                 if (lookup('vars', radarr_name + '_web_subdomain', default=radarr_web_subdomain) | length > 0)
                 else lookup('vars', radarr_name + '_web_domain', default=radarr_web_domain)) }}"

################################
# DNS
################################

radarr_dns_record: "{{ lookup('vars', radarr_name + '_web_subdomain', default=radarr_web_subdomain) }}"
radarr_dns_zone: "{{ lookup('vars', radarr_name + '_web_domain', default=radarr_web_domain) }}"
radarr_dns_proxy: "{{ dns.proxied }}"

################################
# Traefik
################################

radarr_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
radarr_traefik_middleware_default: "{{ traefik_default_middleware
                                       + (',themepark-' + lookup('vars', radarr_name + '_name', default=radarr_name)
                                         if (radarr_themepark_enabled and global_themepark_plugin_enabled)
                                         else '') }}"
radarr_traefik_middleware_custom: ""
radarr_traefik_certresolver: "{{ traefik_default_certresolver }}"
radarr_traefik_enabled: true
radarr_traefik_api_enabled: true
radarr_traefik_api_endpoint: "PathPrefix(`/api`) || PathPrefix(`/feed`) || PathPrefix(`/ping`)"

################################
# API
################################

# default to blank
radarr_api_key:

################################
# THEME
################################

# Options can be found at https://github.com/themepark-dev/theme.park
radarr_themepark_enabled: false
radarr_themepark_app: "radarr"
radarr_themepark_theme: "{{ global_themepark_theme }}"
radarr_themepark_domain: "{{ global_themepark_domain }}"
radarr_themepark_addons: []

################################
# Docker
################################

# Container
radarr_docker_container: "{{ radarr_name }}"

# Image
radarr_docker_image_pull: true
radarr_docker_image_repo: "ghcr.io/hotio/radarr"
radarr_docker_image_tag: "release"
radarr_docker_image: "{{ lookup('vars', radarr_name + '_docker_image_repo', default=radarr_docker_image_repo)
                         + ':' + lookup('vars', radarr_name + '_docker_image_tag', default=radarr_docker_image_tag) }}"
# Platform
radarr_docker_platform_map:
  x86_64: "linux/amd64"
  amd64: "linux/amd64"
  aarch64: "linux/arm64"
  arm64: "linux/arm64"
radarr_docker_platform: "{{ radarr_docker_platform_map[ansible_architecture] | default('linux/amd64') }}"


# Ports
radarr_docker_ports_defaults: []
radarr_docker_ports_custom: []
radarr_docker_ports: "{{ lookup('vars', radarr_name + '_docker_ports_defaults', default=radarr_docker_ports_defaults)
                         + lookup('vars', radarr_name + '_docker_ports_custom', default=radarr_docker_ports_custom) }}"

# Envs
radarr_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  UMASK: "002"
  TZ: "{{ tz }}"
radarr_docker_envs_custom: {}
radarr_docker_envs: "{{ lookup('vars', radarr_name + '_docker_envs_default', default=radarr_docker_envs_default)
                        | combine(lookup('vars', radarr_name + '_docker_envs_custom', default=radarr_docker_envs_custom)) }}"

# Commands
radarr_docker_commands_default: []
radarr_docker_commands_custom: []
radarr_docker_commands: "{{ lookup('vars', radarr_name + '_docker_commands_default', default=radarr_docker_commands_default)
                            + lookup('vars', radarr_name + '_docker_commands_custom', default=radarr_docker_commands_custom) }}"

# Volumes
radarr_docker_volumes_default:
  - "{{ radarr_paths_location }}:/config"
  - "{{ server_appdata_path }}/scripts:/scripts"
radarr_docker_volumes_legacy:
  - "/mnt/unionfs/Media/Movies:/movies"
radarr_docker_volumes_custom: []
radarr_docker_volumes: "{{ lookup('vars', radarr_name + '_docker_volumes_default', default=radarr_docker_volumes_default)
                           + lookup('vars', radarr_name + '_docker_volumes_custom', default=radarr_docker_volumes_custom)
                           + (lookup('vars', radarr_name + '_docker_volumes_legacy', default=radarr_docker_volumes_legacy)
                             if docker_legacy_volume
                             else []) }}"

# Devices
radarr_docker_devices_default: []
radarr_docker_devices_custom: []
radarr_docker_devices: "{{ lookup('vars', radarr_name + '_docker_devices_default', default=radarr_docker_devices_default)
                           + lookup('vars', radarr_name + '_docker_devices_custom', default=radarr_docker_devices_custom) }}"

# Hosts
radarr_docker_hosts_default: {}
radarr_docker_hosts_custom: {}
radarr_docker_hosts: "{{ docker_hosts_common
                         | combine(lookup('vars', radarr_name + '_docker_hosts_default', default=radarr_docker_hosts_default))
                         | combine(lookup('vars', radarr_name + '_docker_hosts_custom', default=radarr_docker_hosts_custom)) }}"

# Labels
radarr_docker_labels_default: {}
radarr_docker_labels_custom: {}
radarr_docker_labels: "{{ docker_labels_common
                          | combine(lookup('vars', radarr_name + '_docker_labels_default', default=radarr_docker_labels_default))
                          | combine((traefik_themepark_labels
                                    if (radarr_themepark_enabled and global_themepark_plugin_enabled)
                                    else {}),
                                    lookup('vars', radarr_name + '_docker_labels_custom', default=radarr_docker_labels_custom)) }}"

# Hostname
radarr_docker_hostname: "{{ radarr_name }}"

# Network Mode
radarr_docker_network_mode_default: "{{ docker_networks_name_common }}"
radarr_docker_network_mode: "{{ lookup('vars', radarr_name + '_docker_network_mode_default', default=radarr_docker_network_mode_default) }}"

# Networks
radarr_docker_networks_alias: "{{ radarr_name }}"
radarr_docker_networks_default: []
radarr_docker_networks_custom: []
radarr_docker_networks: "{{ docker_networks_common
                            + lookup('vars', radarr_name + '_docker_networks_default', default=radarr_docker_networks_default)
                            + lookup('vars', radarr_name + '_docker_networks_custom', default=radarr_docker_networks_custom) }}"

# Capabilities
radarr_docker_capabilities_default: []
radarr_docker_capabilities_custom: []
radarr_docker_capabilities: "{{ lookup('vars', radarr_name + '_docker_capabilities_default', default=radarr_docker_capabilities_default)
                                + lookup('vars', radarr_name + '_docker_capabilities_custom', default=radarr_docker_capabilities_custom) }}"

# Security Opts
radarr_docker_security_opts_default: []
radarr_docker_security_opts_custom: []
radarr_docker_security_opts: "{{ lookup('vars', radarr_name + '_docker_security_opts_default', default=radarr_docker_security_opts_default)
                                 + lookup('vars', radarr_name + '_docker_security_opts_custom', default=radarr_docker_security_opts_custom) }}"

# Restart Policy
radarr_docker_restart_policy: unless-stopped

# State
radarr_docker_state: started
