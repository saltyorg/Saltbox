#########################################################################
# Title:         Saltbox: Plex Plugins / Sub-Zero                       #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check if Plex instance is defined
  ansible.builtin.set_fact:
    plex_name: "{{ plex_name | default(plex_instances[0]) }}"

- name: Check for previously installed Sub-Zero Plugin
  ansible.builtin.stat:
    path: "{{ plex_plugin_subzero_paths_info_plist_location }}"
  register: plex_plugin_subzero_bundle_status

- name: Tasks for previously installed Sub-Zero Plugin
  when: plex_plugin_subzero_bundle_status.stat.exists
  block:
    - name: Set default value for 'plex_plugin_subzero_is_outdated' variable
      ansible.builtin.set_fact:
        plex_plugin_subzero_is_outdated: false

    # https://stackoverflow.com/a/51109708/10975859
    - name: Check version of previously installed Sub-Zero
      community.general.xml:
        path: "{{ plex_plugin_subzero_paths_info_plist_location }}"
        xpath: /plist/dict/key[.='CFBundleVersion']/following-sibling::*[1]
        content: 'text'
      register: plex_plugin_subzero_info_plist_xmlresp_1

    - name: Set 'plex_plugin_subzero_previously_installed_version' variable
      ansible.builtin.set_fact:
        plex_plugin_subzero_previously_installed_version: "{{ plex_plugin_subzero_info_plist_xmlresp_1.matches[0].string }}"

    - name: Check latest available version for Sub-Zero
      ansible.builtin.shell: curl -s {{ plex_plugin_subzero_release_url }} | jq -r .tag_name
      register: plex_plugin_subzero_latest_version
      ignore_errors: true
      changed_when: false

    - name: Compare installed Sub-Zero Plugin version with latest one
      ansible.builtin.set_fact:
        plex_plugin_subzero_is_outdated: "{{
            (plex_plugin_subzero_latest_version is failed) or
              ((plex_plugin_subzero_latest_version is success) and
              (plex_plugin_subzero_previously_installed_version is version(plex_plugin_subzero_latest_version.stdout, '<'))) }}"

- name: Install Sub-Zero Plugin
  when: (not plex_plugin_subzero_bundle_status.stat.exists) or
        (plex_plugin_subzero_bundle_status.stat.exists and plex_plugin_subzero_is_outdated) or
        ('plex-plugin-sub-zero-reinstall' in ansible_run_tags) or ('plex-plugin-sub-zero' in ansible_run_tags)
  block:
    - name: Check to see if {{ plex_name | title }} is running
      when: ('plex-plugin-sub-zero' in ansible_run_tags) or ('plex-plugin-sub-zero-reinstall' in ansible_run_tags)
      block:
        - name: Gather list of running Docker containers
          ansible.builtin.shell: "docker ps --format '{{ '{{' }} .Names{{ '}}' }}' | xargs echo -n"
          register: docker_running_containers_list

        - name: Set 'docker_running_containers_list' variable
          ansible.builtin.set_fact:
            docker_running_containers_list: "{{ (docker_running_containers_list.stdout).split() }}"

        - name: "Stop {{ plex_name | title }} container"
          ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/stop_docker_container.yml"
          vars:
            var_prefix: "plex"
          when: (plex_docker_container in docker_running_containers_list)

    - name: Remove outdated Sub-Zero Plugin
      ansible.builtin.file:
        path: "{{ plex_plugin_subzero_paths_location }}"
        state: absent

    - name: Get latest Sub-Zero Plugin URL
      ansible.builtin.shell: |
        curl -s {{ plex_plugin_subzero_release_url }} \
          | jq -r ".assets[] | select(.name | test(\"Sub-Zero.bundle\")) | .browser_download_url"
      register: plex_plugin_subzero_download_url
      ignore_errors: true
      changed_when: false

    - name: Set 'plex_plugin_subzero_download_url' variable
      ansible.builtin.set_fact:
        plex_plugin_subzero_download_url: "{{ plex_plugin_subzero_download_url.stdout | default(plex_plugin_subzero_download_url_backup, true) }}"

    - name: "Create {{ plex_name | title }} 'plug-ins' directory"
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0775"
        recurse: true
      with_items:
        - "{{ lookup('role_var', '_paths_plugins_location', role='plex') }}"

    - name: Install Sub-Zero Plugin
      ansible.builtin.unarchive:
        src: "{{ plex_plugin_subzero_download_url }}"
        dest: "{{ lookup('role_var', '_paths_plugins_location', role='plex') }}"
        copy: false
        owner: "{{ user.name }}"
        group: "{{ user.name }}"
        mode: "0775"
        validate_certs: false
      register: plex_plugin_subzero_download_status
      ignore_errors: true

    - name: Post-Successful Sub-Zero Plugin Download
      when: (plex_plugin_subzero_download_status is success)
      block:
        - name: Check for newly installed Sub-Zero Plugin
          ansible.builtin.stat:
            path: "{{ plex_plugin_subzero_paths_info_plist_location }}"
          register: plex_plugin_subzero_info_plist_status

        - name: Post-Successful Sub-Zero Plugin Install
          when: plex_plugin_subzero_info_plist_status.stat.exists
          block:
            - name: Check version of newly installed Sub-Zero Plugin
              community.general.xml:
                path: "{{ plex_plugin_subzero_paths_info_plist_location }}"
                xpath: /plist/dict/key[.='CFBundleVersion']/following-sibling::*[1]
                content: 'text'
              register: plex_plugin_subzero_info_plist_xmlresp_2

            - name: Set 'subzero_newly_installed_version' variable
              ansible.builtin.set_fact:
                plex_plugin_subzero_newly_installed_version: "{{ plex_plugin_subzero_info_plist_xmlresp_2.matches[0].string }}"

            - name: Display Sub-Zero Plugin version
              ansible.builtin.debug:
                msg: "Sub-Zero Plugin version {{ plex_plugin_subzero_newly_installed_version }} installed."

    - name: Sub-Zero Plugin install failed
      ansible.builtin.debug:
        msg: "Sub-Zero Plugin install failed."
      when: (plex_plugin_subzero_download_status is failed) or
            ((plex_plugin_subzero_download_status is success) and (not plex_plugin_subzero_info_plist_status.stat.exists))

    - name: "Start {{ plex_name | title }} container"
      ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/start_docker_container.yml"
      vars:
        var_prefix: "plex"
      when: ('plex-plugin-sub-zero' in ansible_run_tags) or
            ('plex-plugin-sub-zero-reinstall' in ansible_run_tags) or
            (plex_docker_container in docker_running_containers_list)

- name: Sub-Zero Plugin was not updated
  ansible.builtin.debug:
    msg: "Sub-Zero is already the latest version."
  when:
    - plex_plugin_subzero_bundle_status.stat.exists
    - (not plex_plugin_subzero_is_outdated)
    - ('plex-plugin-sub-zero-reinstall' not in ansible_run_tags)
