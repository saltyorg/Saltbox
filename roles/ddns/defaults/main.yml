##########################################################################
# Title:         Saltbox: Cloudflare DNS | Default Variables             #
# Author(s):     salty                                                   #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

ddns_name: ddns

################################
# Settings
################################

# Comma separated FQDN's that you want the container to manage
ddns_role_custom_urls: ""
ddns_role_delay: "60"

################################
# Docker
################################

# Container
ddns_role_docker_container: "{{ ddns_name }}"

# Image
ddns_role_docker_image_pull: true
ddns_role_docker_image_repo: "saltydk/dns"
ddns_role_docker_image_tag: "latest"
ddns_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='ddns') }}:{{ lookup('role_var', '_docker_image_tag', role='ddns') }}"

# Envs
ddns_role_docker_envs_default:
  TZ: "{{ tz }}"
  CLOUDFLARE_API_KEY: "{{ cloudflare.api }}"
  CLOUDFLARE_EMAIL: "{{ cloudflare.email }}"
  CLOUDFLARE_PROXY_DEFAULT: "{{ dns.proxied | string }}"
  TRAEFIK_API_URL: "http://traefik:8080"
  TRAEFIK_ENTRYPOINTS: "websecure,web"
  CUSTOM_URLS: "{{ lookup('role_var', '_custom_urls', role='ddns') if (lookup('role_var', '_custom_urls', role='ddns') | length > 0) else omit }}"
  IP_VERSION: "{{ 'both' if (dns.ipv4 and dns.ipv6) else ('4' if dns.ipv4 else '6') }}"
  DELAY: "{{ lookup('role_var', '_delay', role='ddns') }}"
ddns_role_docker_envs_custom: {}
ddns_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='ddns')
                           | combine(lookup('role_var', '_docker_envs_custom', role='ddns')) }}"

# Volumes
ddns_role_docker_volumes_global: false

# Mounts
ddns_role_docker_mounts_default:
  - target: /tmp
    type: tmpfs
ddns_role_docker_mounts_custom: []
ddns_role_docker_mounts: "{{ lookup('role_var', '_docker_mounts_default', role='ddns')
                             + lookup('role_var', '_docker_mounts_custom', role='ddns') }}"

# Hostname
ddns_role_docker_hostname: "{{ ddns_name }}"

# Networks
ddns_role_docker_networks_alias: "{{ ddns_name }}"
ddns_role_docker_networks_default: []
ddns_role_docker_networks_custom: []
ddns_role_docker_networks: "{{ docker_networks_common
                               + lookup('role_var', '_docker_networks_default', role='ddns')
                               + lookup('role_var', '_docker_networks_custom', role='ddns') }}"

# Restart Policy
ddns_role_docker_restart_policy: unless-stopped

# State
ddns_role_docker_state: started

# Init
ddns_role_docker_init: true

# Dependencies
ddns_role_depends_on: "traefik"
ddns_role_depends_on_delay: "10"
ddns_role_depends_on_healthchecks: "false"
