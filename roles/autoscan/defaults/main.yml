##########################################################################
# Title:         Saltbox: Autoscan | Default Variables                   #
# Author(s):     salty, TABLE                                            #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

autoscan_instances: ["autoscan"]

################################
# Paths
################################

autoscan_role_paths_folder: "{{ autoscan_name }}"
autoscan_role_paths_location: "{{ server_appdata_path }}/{{ autoscan_role_paths_folder }}"
autoscan_role_paths_folders_list:
  - "{{ autoscan_role_paths_location }}"
autoscan_role_paths_config_location: "{{ autoscan_role_paths_location }}/config.yml"

################################
# Web
################################

autoscan_role_web_subdomain: "{{ autoscan_name }}"
autoscan_role_web_domain: "{{ user.domain }}"
autoscan_role_web_port: "3030"
autoscan_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='autoscan') + '.' + lookup('role_var', '_web_domain', role='autoscan')
                        if (lookup('role_var', '_web_subdomain', role='autoscan') | length > 0)
                        else lookup('role_var', '_web_domain', role='autoscan')) }}"

################################
# DNS
################################

autoscan_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='autoscan') }}"
autoscan_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='autoscan') }}"
autoscan_role_dns_proxy: "{{ dns_proxied }}"

################################
# Traefik
################################

autoscan_role_traefik_regex_middleware_string: ",{{ autoscan_name }}-replacepathregex"
autoscan_role_traefik_sso_middleware: ""
autoscan_role_traefik_middleware_default: "{{ traefik_default_middleware + autoscan_role_traefik_regex_middleware_string }}"
autoscan_role_traefik_middleware_custom: ""
autoscan_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
autoscan_role_traefik_enabled: true
autoscan_role_traefik_api_enabled: false
autoscan_role_traefik_api_endpoint: ""

################################
# Docker
################################

# Container
autoscan_role_docker_container: "{{ autoscan_name }}"

# Image
autoscan_role_docker_image_pull: true
autoscan_role_docker_image_repo: "saltydk/autoscan"
autoscan_role_docker_image_tag: "latest"
autoscan_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='autoscan') }}:{{ lookup('role_var', '_docker_image_tag', role='autoscan') }}"

# Envs
autoscan_role_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  TZ: "{{ tz }}"
autoscan_role_docker_envs_custom: {}
autoscan_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='autoscan')
                               | combine(lookup('role_var', '_docker_envs_custom', role='autoscan')) }}"

# Volumes
autoscan_role_docker_volumes_default:
  - "{{ autoscan_role_paths_location }}:/config"
autoscan_role_docker_volumes_custom: []
autoscan_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='autoscan')
                                  + lookup('role_var', '_docker_volumes_custom', role='autoscan') }}"

# Labels
autoscan_role_docker_labels_default:
  - '{ "traefik.http.middlewares.{{ traefik_router }}-replacepathregex.replacepathregex.regex": "^/$" }'
  - '{ "traefik.http.middlewares.{{ traefik_router }}-replacepathregex.replacepathregex.replacement": "/triggers/manual" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.entrypoints": "{{ traefik_entrypoint_websecure }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.rule": "Host(`{{ traefik_host }}`) && PathPrefix(`/triggers`)" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.priority": "{{ lookup("role_var", "_traefik_priority", role="autoscan", default="40") }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.tls.certresolver": "{{ lookup("role_var", "_traefik_certresolver", role="autoscan", default=traefik_default_certresolver) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-triggers.middlewares": "{{ traefik_middleware | regex_replace(autoscan_role_traefik_regex_middleware_string) }}" }'
autoscan_role_docker_labels_custom: {}
autoscan_role_docker_labels: "{{ lookup('role_var', '_docker_labels_default', role='autoscan')
                                 | combine(lookup('role_var', '_docker_labels_custom', role='autoscan')) }}"

# Hostname
autoscan_role_docker_hostname: "{{ autoscan_name }}"

# Networks
autoscan_role_docker_networks_alias: "{{ autoscan_name }}"
autoscan_role_docker_networks_default: []
autoscan_role_docker_networks_custom: []
autoscan_role_docker_networks: "{{ docker_networks_common
                                   + lookup('role_var', '_docker_networks_default', role='autoscan')
                                   + lookup('role_var', '_docker_networks_custom', role='autoscan') }}"

# Restart Policy
autoscan_role_docker_restart_policy: unless-stopped

# State
autoscan_role_docker_state: started
