##########################################################################
# Title:         Saltbox: Traefik | Default Variables                    #
# Author(s):     RXWatcher, salty                                        #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

traefik_name: traefik

################################
# Config
################################

traefik_trusted_ips: ""
traefik_plugin_cloudflarewarp_enabled: true
traefik_file_watch: "true"
traefik_x_robots: "none,noarchive,nosnippet,notranslate,noimageindex"
# HTTP3 can cause issues with some apps
traefik_http3: false
traefik_tailscale_enabled: false
# traefik_tailscale_bind_ip: "" # Set to override the WAN IP port binding when server is not connected directly to the Internet.
# traefik_tailscale_bind_ipv6: "" # Same but IPv6
traefik_entrypoint_web_port: "80"
traefik_entrypoint_web_readtimeout: "600"
traefik_entrypoint_web_writetimeout: "0"
traefik_entrypoint_web_idletimeout: "180"
traefik_entrypoint_web_request_maxheaderbytes: "1048576"
traefik_entrypoint_websecure_port: "443"
traefik_entrypoint_websecure_readtimeout: "600"
traefik_entrypoint_websecure_writetimeout: "0"
traefik_entrypoint_websecure_idletimeout: "180"
traefik_entrypoint_websecure_request_maxheaderbytes: "1048576"
traefik_entrypoint_custom: {}
# Format is as follows (address can be empty string "" to bind on every interface):
# Type options are tcp, udp or both.
# traefik_entrypoint_custom:
#   tcp-entrypoint:
#     address: "IP"
#     port: "81"
#     tls: false
#     type: tcp
#   tcp-and-udp-entrypoint-with-tls:
#     address: "IP"
#     port: "444"
#     tls: true
#     type: both
traefik_dns_resolvers: "1.1.1.1:53,1.0.0.1:53"
traefik_disable_propagation_check: false
traefik_enable_http_validation: "{{ traefik_http or (traefik.cert.http_validation | bool) }}"
traefik_enable_zerossl: true
# Path is internal to the container, so a host path of /opt/traefik/file.html becomes /etc/traefik/file.html
traefik_crowdsec_ban_filepath: "/etc/traefik/ban.html"

################################
# Templates
################################

traefik_entrypoint_template:
  - "--entrypoints.{{ item.key }}.address={{ item.value.address + ':' + (item.value.port | string) }}"

traefik_entrypoint_tls_template:
  - "--entrypoints.{{ item.key }}.address={{ item.value.address + ':' + (item.value.port | string) }}"
  - "--entrypoints.{{ item.key }}.http.tls.certResolver={{ traefik_default_certresolver }}"

traefik_entrypoint_http3_template:
  - "--entrypoints.{{ item.key }}.http3"
  - "--entrypoints.{{ item.key }}.http3.advertisedport={{ item.value.port }}"

traefik_entrypoint_ports_tcp_template:
  - "{{ item.value.port }}:{{ item.value.port }}/tcp"

traefik_entrypoint_ports_udp_template:
  - "{{ item.value.port }}:{{ item.value.port }}/udp"

traefik_entrypoint_ports_both_template:
  - "{{ item.value.port }}:{{ item.value.port }}/tcp"
  - "{{ item.value.port }}:{{ item.value.port }}/udp"

traefik_trusted_ips_template: "{{ traefik_trusted_ips
                               if (traefik_trusted_ips | length > 0)
                               else '' }}"

################################
# Lookups
################################

traefik_zerossl_file_ini: "{{ server_appdata_path }}/saltbox/zerossl.ini"

################################
# Booleans
################################

traefik_role_authelia_enabled: "{{ 'authelia' in traefik_default_sso_middleware }}"
traefik_role_authentik_enabled: "{{ 'authentik' in traefik_default_sso_middleware }}"
traefik_role_metrics_enabled: "{{ traefik.metrics | bool }}"

################################
# Paths
################################

traefik_role_paths_folder: "{{ traefik_name }}"
traefik_role_paths_location: "{{ server_appdata_path }}/{{ traefik_role_paths_folder }}"
traefik_role_paths_acme_config_location: "{{ traefik_role_paths_location }}/acme.json"
traefik_role_paths_folders_list:
  - "{{ traefik_role_paths_location }}"

################################
# Web
################################

traefik_role_web_subdomain: "{{ traefik.subdomains.dash }}"
traefik_role_web_domain: "{{ user.domain }}"
traefik_role_metrics_subdomain: "{{ traefik.subdomains.metrics }}"
traefik_role_metrics_domain: "{{ user.domain }}"

################################
# Logging
################################

traefik_role_log_level: "ERROR"
traefik_role_log_file: true
traefik_role_log_max_size: "10"
traefik_role_log_max_backups: "3"
traefik_role_log_max_age: "3"
traefik_role_log_compress: "true"
traefik_role_access_log: true
traefik_role_access_buffer: 100

################################
# DNS
################################

traefik_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='traefik') }}"
traefik_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='traefik') }}"
traefik_role_dns_proxy: "{{ dns_proxied }}"
traefik_role_metrics_dns_record: "{{ lookup('role_var', '_metrics_subdomain', role='traefik') }}"
traefik_role_metrics_dns_zone: "{{ lookup('role_var', '_metrics_domain', role='traefik') }}"
traefik_role_metrics_dns_proxy: "{{ dns_proxied }}"

################################
# DNS Provider
################################

traefik_dns_provider_cloudflare_tmp:
  CLOUDFLARE_EMAIL: "{{ cloudflare.email }}"
  CLOUDFLARE_API_KEY: "{{ cloudflare.api }}"

traefik_dns_provider_cloudflare: "{{ traefik_dns_provider_cloudflare_tmp
                                  if cloudflare_is_enabled
                                  else {} }}"

traefik_dns_provider_cloudns:
  CLOUDDNS_CLIENT_ID: "{{ cloudns.client_id }}"
  CLOUDDNS_EMAIL: "{{ cloudns.email }}"
  CLOUDDNS_PASSWORD: "{{ cloudns.password }}"

traefik_dns_provider_duckdns:
  DUCKDNS_TOKEN: "{{ duckdns.token }}"

traefik_dns_provider_dynu:
  DYNU_API_KEY: "{{ dynu.api_key }}"

traefik_dns_provider_godaddy:
  GODADDY_API_KEY: "{{ godaddy.api_key }}"
  GODADDY_API_SECRET: "{{ godaddy.api_secret }}"

traefik_dns_provider_hetzner:
  HETZNER_API_KEY: "{{ hetzner.api_key }}"

traefik_dns_provider_linode:
  LINODE_TOKEN: "{{ linode.token }}"

traefik_dns_provider_namecheap:
  NAMECHEAP_API_USER: "{{ namecheap.api_user }}"
  NAMECHEAP_API_KEY: "{{ namecheap.api_key }}"

traefik_dns_provider_namedotcom:
  NAMECOM_USERNAME: "{{ namedotcom.username }}"
  NAMECOM_API_TOKEN: "{{ namedotcom.api_token }}"
  NAMECOM_SERVER: "{{ namedotcom.server }}"

traefik_dns_provider_netcup:
  NETCUP_CUSTOMER_NUMBER: "{{ netcup.customer_number }}"
  NETCUP_API_KEY: "{{ netcup.api_key }}"
  NETCUP_API_PASSWORD: "{{ netcup.api_password }}"

traefik_dns_provider_porkbun:
  PORKBUN_API_KEY: "{{ porkbun.api_key }}"
  PORKBUN_SECRET_API_KEY: "{{ porkbun.secret_key }}"

traefik_dns_provider_powerdns:
  PDNS_API_KEY: "{{ powerdns.api_key }}"
  PDNS_API_URL: "{{ powerdns.api_url }}"

################################
# Traefik
################################

traefik_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
traefik_traefik_certresolver: "{{ traefik_default_certresolver }}"
traefik_traefik_enabled: true
traefik_traefik_autodetect_enabled: true

################################
# Docker
################################

# Container
traefik_role_docker_container: "{{ traefik_name }}"

# Image
traefik_role_docker_image_pull: true
traefik_role_docker_image_repo: "traefik"
traefik_role_docker_image_tag: "v3.5"
traefik_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='traefik') }}:{{ lookup('role_var', '_docker_image_tag', role='traefik') }}"

# Ports
traefik_role_docker_ports_defaults:
  - "{{ traefik_entrypoint_web_port }}:{{ traefik_entrypoint_web_port }}/tcp"
  - "{{ traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/tcp"
  - "{{ traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/udp"
traefik_role_docker_ports_tailscale_ipv4_defaults:
  - "{{ lookup('vars', 'traefik_tailscale_bind_ip', default=ip_address_public) + ':' + traefik_entrypoint_web_port }}:{{ traefik_entrypoint_web_port }}/tcp"
  - "{{ lookup('vars', 'traefik_tailscale_bind_ip', default=ip_address_public) + ':' + traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/tcp"
  - "{{ lookup('vars', 'traefik_tailscale_bind_ip', default=ip_address_public) + ':' + traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/udp"
  - "{{ tailscale_ipv4 + ':' + traefik_entrypoint_web_port }}:81/tcp"
  - "{{ tailscale_ipv4 + ':' + traefik_entrypoint_websecure_port }}:444/tcp"
  - "{{ tailscale_ipv4 + ':' + traefik_entrypoint_websecure_port }}:444/udp"
traefik_role_docker_ports_tailscale_ipv6_defaults:
  - "{{ '[' + lookup('vars', 'traefik_tailscale_bind_ipv6', default=ipv6_address_public) + ']:' + traefik_entrypoint_web_port }}:{{ traefik_entrypoint_web_port }}/tcp"
  - "{{ '[' + lookup('vars', 'traefik_tailscale_bind_ipv6', default=ipv6_address_public) + ']:' + traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/tcp"
  - "{{ '[' + lookup('vars', 'traefik_tailscale_bind_ipv6', default=ipv6_address_public) + ']:' + traefik_entrypoint_websecure_port }}:{{ traefik_entrypoint_websecure_port }}/udp"
  - "{{ '[' + tailscale_ipv6 + ']:' + traefik_entrypoint_web_port }}:81/tcp"
  - "{{ '[' + tailscale_ipv6 + ']:' + traefik_entrypoint_websecure_port }}:444/tcp"
  - "{{ '[' + tailscale_ipv6 + ']:' + traefik_entrypoint_websecure_port }}:444/udp"
traefik_role_docker_ports_custom: []
traefik_role_docker_ports: "{{ (lookup('role_var', '_docker_ports_defaults', role='traefik')
                               if not traefik_tailscale_enabled
                               else lookup('role_var', '_docker_ports_tailscale_ipv4_defaults', role='traefik')
                                    + (lookup('role_var', '_docker_ports_tailscale_ipv6_defaults', role='traefik')
                                      if dns_ipv6_enabled
                                      else []))
                               + lookup('role_var', '_docker_ports_custom', role='traefik') }}"

# Envs
traefik_role_docker_envs_default:
  TZ: "{{ tz }}"
traefik_role_docker_envs_custom: {}
traefik_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='traefik')
                              | combine(lookup('vars', 'traefik_dns_provider_' + traefik_challenge_provider, default={}))
                              | combine(lookup('role_var', '_docker_envs_custom', role='traefik')) }}"

# Commands
traefik_role_docker_commands_default:
  - "--global.sendanonymoususage=false"
  - "--providers.file.directory=/etc/traefik"
  - "--providers.file.watch={{ traefik_file_watch }}"
  - "--providers.docker=true"
  - "--providers.docker.exposedbydefault=false"
  - "--entrypoints.internal.address=:8080"
  - "--entrypoints.web.address=:{{ traefik_entrypoint_web_port }}"
  - "{{ ('--entrypoints.web.forwardedheaders.trustedIPs=' + traefik_trusted_ips_template) if (traefik_trusted_ips_template | length > 0) else omit }}"
  - "{{ ('--entrypoints.web.proxyprotocol.trustedIPs=' + traefik_trusted_ips_template) if (traefik_trusted_ips_template | length > 0) else omit }}"
  - "--entrypoints.web.transport.respondingTimeouts.readTimeout={{ traefik_entrypoint_web_readtimeout }}"
  - "--entrypoints.web.transport.respondingTimeouts.writeTimeout={{ traefik_entrypoint_web_writetimeout }}"
  - "--entrypoints.web.transport.respondingTimeouts.idleTimeout={{ traefik_entrypoint_web_idletimeout }}"
  - "--entrypoints.web.http.maxheaderbytes={{ traefik_entrypoint_web_request_maxheaderbytes }}"
  - "--entrypoints.websecure.address=:{{ traefik_entrypoint_websecure_port }}"
  - "{{ ('--entrypoints.websecure.forwardedheaders.trustedIPs=' + traefik_trusted_ips_template) if (traefik_trusted_ips_template | length > 0) else omit }}"
  - "{{ ('--entrypoints.websecure.proxyprotocol.trustedIPs=' + traefik_trusted_ips_template) if (traefik_trusted_ips_template | length > 0) else omit }}"
  - "--entrypoints.websecure.transport.respondingTimeouts.readTimeout={{ traefik_entrypoint_websecure_readtimeout }}"
  - "--entrypoints.websecure.transport.respondingTimeouts.writeTimeout={{ traefik_entrypoint_websecure_writetimeout }}"
  - "--entrypoints.websecure.transport.respondingTimeouts.idleTimeout={{ traefik_entrypoint_websecure_idletimeout }}"
  - "--entrypoints.websecure.http.maxheaderbytes={{ traefik_entrypoint_websecure_request_maxheaderbytes }}"
  - "--entrypoints.websecure.http.tls.certResolver={{ traefik_default_certresolver }}"
  - "--api.dashboard=true"
  - "--api=true"
  - "--log.level={{ lookup('role_var', '_log_level', role='traefik') }}"
  - "{{ ('--log.filepath=/etc/traefik/traefik.log') if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "{{ ('--log.maxsize=' + lookup('role_var', '_log_max_size', role='traefik')) if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "{{ ('--log.maxbackups=' + lookup('role_var', '_log_max_backups', role='traefik')) if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "{{ ('--log.maxage=' + lookup('role_var', '_log_max_age', role='traefik')) if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "{{ ('--log.compress=' + lookup('role_var', '_log_compress', role='traefik')) if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "{{ '--log.nocolor=true' if lookup('role_var', '_log_file', role='traefik') else omit }}"
  - "--accesslog={{ lookup('role_var', '_access_log', role='traefik') }}"
  - "--accesslog.fields.names.StartUTC=drop"
  - "--accesslog.fields.headers.names.User-Agent=keep"
  - "--accesslog.fields.headers.names.Content-Type=keep"
  - "--accesslog.filepath=/etc/traefik/access.log"
  - "--accesslog.bufferingsize={{ lookup('role_var', '_access_buffer', role='traefik') }}"
  - "--certificatesresolvers.cfdns.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "{{ ('--certificatesresolvers.cfdns.acme.dnschallenge.resolvers=' + traefik_dns_resolvers) if (traefik_dns_resolvers | length > 0) else omit }}"
  - "--certificatesresolvers.cfdns.acme.email={{ user.email }}"
  - "--certificatesresolvers.cfdns.acme.storage=/etc/traefik/acme.json"
  - "{{ '--certificatesresolvers.cfdns.acme.dnschallenge.propagation.delayBeforeChecks=60s' if traefik_disable_propagation_check else omit }}"
  - "{{ '--certificatesresolvers.cfdns.acme.dnschallenge.propagation.disableChecks=true' if traefik_disable_propagation_check else omit }}"
traefik_role_docker_commands_zerossl_acme:
  - "--certificatesresolvers.zerossl.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "{{ '--certificatesresolvers.zerossl.acme.dnschallenge.resolvers=' + traefik_dns_resolvers if (traefik_dns_resolvers | length > 0) else omit }}"
  - "--certificatesresolvers.zerossl.acme.email={{ user.email }}"
  - "--certificatesresolvers.zerossl.acme.caserver=https://acme.zerossl.com/v2/DV90"
  - "--certificatesresolvers.zerossl.acme.eab.kid={{ traefik_zerossl_kid | default('') }}"
  - "--certificatesresolvers.zerossl.acme.eab.hmacencoded={{ traefik_zerossl_hmacencoded | default('') }}"
  - "--certificatesresolvers.zerossl.acme.storage=/etc/traefik/acme.json"
  - "{{ '--certificatesresolvers.zerossl.acme.dnschallenge.propagation.delayBeforeChecks=60s' if traefik_disable_propagation_check else omit }}"
  - "{{ '--certificatesresolvers.zerossl.acme.dnschallenge.propagation.disableChecks=true' if traefik_disable_propagation_check else omit }}"
traefik_role_docker_commands_http_validation_acme:
  - "--certificatesresolvers.httpresolver.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.httpresolver.acme.email={{ user.email }}"
  - "--certificatesresolvers.httpresolver.acme.storage=/etc/traefik/acme.json"
traefik_role_docker_commands_http_validation_acme_zerossl:
  - "--certificatesresolvers.zerosslhttp.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.zerosslhttp.acme.email={{ user.email }}"
  - "--certificatesresolvers.zerosslhttp.acme.caserver=https://acme.zerossl.com/v2/DV90"
  - "--certificatesresolvers.zerosslhttp.acme.eab.kid={{ traefik_zerossl_kid | default('') }}"
  - "--certificatesresolvers.zerosslhttp.acme.eab.hmacencoded={{ traefik_zerossl_hmacencoded | default('') }}"
  - "--certificatesresolvers.zerosslhttp.acme.storage=/etc/traefik/acme.json"
traefik_role_docker_commands_google_acme:
  - "--certificatesresolvers.google.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "{{ ('--certificatesresolvers.google.acme.dnschallenge.resolvers=' + traefik_dns_resolvers) if (traefik_dns_resolvers | length > 0) else omit }}"
  - "--certificatesresolvers.google.acme.email={{ user.email }}"
  - "--certificatesresolvers.google.acme.caserver=https://dv.acme-v02.api.pki.goog/directory"
  - "--certificatesresolvers.google.acme.eab.kid={{ traefik_google_kid | default('') }}"
  - "--certificatesresolvers.google.acme.eab.hmacencoded={{ traefik_google_hmacencoded | default('') }}"
  - "--certificatesresolvers.google.acme.storage=/etc/traefik/acme.json"
  - "{{ '--certificatesresolvers.google.acme.dnschallenge.propagation.delayBeforeChecks=60s' if traefik_disable_propagation_check else omit }}"
  - "{{ '--certificatesresolvers.google.acme.dnschallenge.propagation.disableChecks=true' if traefik_disable_propagation_check else omit }}"
traefik_role_docker_commands_google_acme_http:
  - "--certificatesresolvers.googlehttp.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.googlehttp.acme.email={{ user.email }}"
  - "--certificatesresolvers.googlehttp.acme.caserver=https://dv.acme-v02.api.pki.goog/directory"
  - "--certificatesresolvers.googlehttp.acme.eab.kid={{ traefik_google_kid | default('') }}"
  - "--certificatesresolvers.googlehttp.acme.eab.hmacencoded={{ traefik_google_hmacencoded | default('') }}"
  - "--certificatesresolvers.googlehttp.acme.storage=/etc/traefik/acme.json"
traefik_role_docker_commands_metrics:
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.addentrypointslabels=true"
  - "--metrics.prometheus.addrouterslabels=true"
  - "--metrics.prometheus.addserviceslabels=true"
  - "--metrics.prometheus.manualrouting=true"
traefik_role_docker_commands_cloudflarewarp_plugin:
  - "--experimental.plugins.cloudflarewarp.modulename=github.com/saltyorg/cloudflarewarp"
  - "--experimental.plugins.cloudflarewarp.version=v1.0.0"
traefik_role_docker_commands_themepark_plugin:
  - "--experimental.plugins.themepark.modulename=github.com/packruler/traefik-themepark"
  - "--experimental.plugins.themepark.version=v1.4.2"
traefik_role_docker_commands_http3:
  - "--entrypoints.websecure.http3.advertisedport={{ traefik_entrypoint_websecure_port }}"
traefik_role_docker_commands_tailscale:
  - "--entrypoints.tailscale-web.address=:81"
  - "--entrypoints.tailscale-websecure.address=:444"
traefik_role_docker_commands_crowdsec:
  - "--experimental.plugins.bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
  - "--experimental.plugins.bouncer.version=v1.4.4"
traefik_role_docker_commands_custom: []
traefik_role_docker_commands: "{{ lookup('role_var', '_docker_commands_default', role='traefik')
                                  + lookup('role_var', '_docker_commands_custom', role='traefik')
                                  + (lookup('role_var', '_docker_commands_metrics', role='traefik')
                                    if (lookup('role_var', '_metrics_enabled', role='traefik'))
                                    else [])
                                  + (lookup('role_var', '_docker_commands_cloudflarewarp_plugin', role='traefik')
                                    if traefik_plugin_cloudflarewarp_enabled and cloudflare_is_enabled
                                    else [])
                                  + (lookup('role_var', '_docker_commands_themepark_plugin', role='traefik')
                                    if global_themepark_plugin_enabled
                                    else [])
                                  + (lookup('role_var', '_docker_commands_zerossl_acme', role='traefik')
                                    if (traefik_enable_zerossl)
                                    else [])
                                  + (lookup('role_var', '_docker_commands_http_validation_acme_zerossl', role='traefik')
                                    if (traefik_enable_http_validation and traefik_enable_zerossl)
                                    else [])
                                  + (lookup('role_var', '_docker_commands_http_validation_acme', role='traefik')
                                    if (traefik_enable_http_validation)
                                    else [])
                                  + (lookup('role_var', '_docker_commands_google_acme', role='traefik')
                                    if (traefik_google_kid is defined) and (traefik_google_hmacencoded is defined)
                                    else [])
                                  + (lookup('role_var', '_docker_commands_google_acme_http', role='traefik')
                                    if (traefik_google_kid is defined) and (traefik_google_hmacencoded is defined) and (traefik_enable_http_validation)
                                    else [])
                                  + (lookup('role_var', '_docker_commands_http3', role='traefik')
                                    if traefik_http3
                                    else [])
                                  + (lookup('role_var', '_docker_commands_tailscale', role='traefik')
                                    if traefik_tailscale_enabled
                                    else [])
                                  + (lookup('role_var', '_docker_commands_crowdsec', role='traefik')
                                    if crowdsec_is_enabled
                                    else [])
                                  + custom_entrypoints }}"

# Volumes
traefik_role_docker_volumes_default:
  - "/var/run/docker.sock:/var/run/docker.sock"
  - "{{ traefik_role_paths_location }}:/etc/traefik"
traefik_role_docker_volumes_custom: []
traefik_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='traefik')
                                 + lookup('role_var', '_docker_volumes_custom', role='traefik') }}"

# Hosts
traefik_role_docker_hosts_default:
  host.docker.internal: "172.19.0.1"
traefik_role_docker_hosts_custom: {}
traefik_role_docker_hosts: "{{ lookup('role_var', '_docker_hosts_default', role='traefik')
                               | combine(lookup('role_var', '_docker_hosts_custom', role='traefik')) }}"

# Labels
traefik_role_docker_labels_use_common: false
traefik_role_docker_labels_default:
  traefik.enable: "true"
  traefik.http.routers.traefik-internal.rule: "Host(`{{ traefik_name }}`)"
  traefik.http.routers.traefik-internal.entrypoints: "internal"
  traefik.http.routers.traefik-internal.service: "api@internal"
  traefik.http.routers.traefik-http.rule: "Host(`{{ lookup('role_var', '_web_subdomain', role='traefik') }}.{{ lookup('role_var', '_web_domain', role='traefik') }}`)"
  traefik.http.routers.traefik-http.entrypoints: "{{ traefik_entrypoint_web }}"
  traefik.http.routers.traefik-http.middlewares: "{{ traefik_default_middleware_http }}"
  traefik.http.routers.traefik-http.priority: "20"
  traefik.http.routers.traefik.rule: "Host(`{{ lookup('role_var', '_web_subdomain', role='traefik') }}.{{ lookup('role_var', '_web_domain', role='traefik') }}`)"
  traefik.http.routers.traefik.entrypoints: "{{ traefik_entrypoint_websecure }}"
  traefik.http.routers.traefik.tls: "true"
  traefik.http.routers.traefik.tls.options: "securetls@file"
  traefik.http.routers.traefik.middlewares: "{{ traefik_default_middleware }}"
  traefik.http.routers.traefik.priority: "20"
  traefik.http.routers.traefik.service: "api@internal"
  traefik.http.middlewares.traefik-auth.basicauth.usersfile: "/etc/traefik/auth"
  traefik.http.middlewares.gzip.compress: "true"
  traefik.http.middlewares.autodetect.contenttype: "true"
  traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"
  traefik.http.middlewares.redirect-to-https.redirectscheme.permanent: "true"
  traefik.http.middlewares.authelia.forwardauth.address: "{{ 'http://' + authelia_name + ':9091/api/verify?rd=' + lookup('role_var', '_web_url', role='authelia') + '/'
                                                          if authelia_is_master
                                                          else lookup('role_var', '_web_url', role='authelia') + '/api/verify?rd=' + lookup('role_var', '_web_url', role='authelia') + '/' }}"
  traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
  traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "{{ lookup('role_var', '_response_headers', role='authelia') | join(',') }}"
  traefik.http.middlewares.authelia-basic.forwardauth.address: "{{ 'http://' + authelia_name + ':9091/api/verify?auth=basic&rd=' + lookup('role_var', '_web_url', role='authelia') + '/'
                                                                if authelia_is_master
                                                                else lookup('role_var', '_web_url', role='authelia') + '/api/verify?auth=basic&rd=' + lookup('role_var', '_web_url', role='authelia') + '/' }}"
  traefik.http.middlewares.authelia-basic.forwardauth.trustForwardHeader: "true"
  traefik.http.middlewares.authelia-basic.forwardauth.authResponseHeaders: "{{ lookup('role_var', '_response_headers', role='authelia') | join(',') }}"
  traefik.http.middlewares.authentik.forwardauth.address: "{{ 'http://' + authentik_name + ':9000/outpost.goauthentik.io/auth/traefik'
                                                           if authentik_is_master
                                                           else lookup('role_var', '_web_url', role='authentik') + '/outpost.goauthentik.io/auth/traefik' }}"
  traefik.http.middlewares.authentik.forwardauth.trustForwardHeader: "true"
  traefik.http.middlewares.authentik.forwardauth.authResponseHeaders: "{{ lookup('role_var', '_response_headers', role='authentik') | join(',') }}"

traefik_role_docker_labels_cloudflare:
  traefik.http.middlewares.cloudflarewarp.plugin.cloudflarewarp.disableDefault: "false"

traefik_role_docker_labels_dns_validation:
  traefik.http.routers.traefik.tls.certresolver: "{{ traefik_default_certresolver }}"
  traefik.http.routers.traefik.tls.domains[0].main: "{{ user.domain }}"
  traefik.http.routers.traefik.tls.domains[0].sans: "{{ '*.' + user.domain }}"

traefik_role_docker_labels_http_validation:
  traefik.http.routers.traefik.tls.certresolver: "{{ traefik_default_certresolver }}"

traefik_role_docker_labels_metrics:
  traefik.http.routers.metrics-http.rule: "Host(`{{ lookup('role_var', '_metrics_subdomain', role='traefik') }}.{{ lookup('role_var', '_metrics_domain', role='traefik') }}`) && Path(`/prometheus`)"
  traefik.http.routers.metrics-http.service: prometheus@internal
  traefik.http.routers.metrics-http.entrypoints: "{{ traefik_entrypoint_web }}"
  traefik.http.routers.metrics-http.middlewares: "traefik-auth,{{ traefik_default_middleware_http_api }}"
  traefik.http.routers.metrics-http.priority: "20"
  traefik.http.routers.metrics.rule: "Host(`{{ lookup('role_var', '_metrics_subdomain', role='traefik') }}.{{ lookup('role_var', '_metrics_domain', role='traefik') }}`) && Path(`/prometheus`)"
  traefik.http.routers.metrics.service: prometheus@internal
  traefik.http.routers.metrics.entrypoints: "{{ traefik_entrypoint_websecure }}"
  traefik.http.routers.metrics.tls: "true"
  traefik.http.routers.metrics.tls.options: "securetls@file"
  traefik.http.routers.metrics.middlewares: "traefik-auth,{{ traefik_default_middleware_api }}"
  traefik.http.routers.metrics.priority: "20"

traefik_role_docker_labels_crowdsec:
  traefik.http.middlewares.crowdsec.plugin.bouncer.enabled: "true"
  traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapikey: "{{ traefik_crowdsec_bouncer_key | default('') }}"
  traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapischeme: "http"
  traefik.http.middlewares.crowdsec.plugin.bouncer.crowdseclapihost: "172.19.0.1:{{ traefik_crowdsec_port }}"
  traefik.http.middlewares.crowdsec.plugin.bouncer.forwardedheaderstrustedips: "{{ traefik_trusted_ips_template if (traefik_trusted_ips_template | length > 0) else omit }}"
  traefik.http.middlewares.crowdsec.plugin.bouncer.banhtmlfilepath: "{{ traefik_crowdsec_ban_filepath }}"

traefik_role_docker_labels_custom: {}
traefik_role_docker_labels: "{{ docker_labels_saltbox
                                | combine(lookup('role_var', '_docker_labels_default', role='traefik'))
                                | combine(lookup('role_var', '_docker_labels_custom', role='traefik'))
                                | combine((lookup('role_var', '_docker_labels_http_validation', role='traefik')
                                          if traefik_http
                                          else lookup('role_var', '_docker_labels_dns_validation', role='traefik')))
                                | combine((lookup('role_var', '_docker_labels_metrics', role='traefik')
                                          if lookup('role_var', '_metrics_enabled', role='traefik')
                                          else {}))
                                | combine((lookup('role_var', '_docker_labels_cloudflare', role='traefik')
                                          if traefik_plugin_cloudflarewarp_enabled and cloudflare_is_enabled
                                          else {}))
                                | combine((lookup('role_var', '_docker_labels_crowdsec', role='traefik')
                                          if crowdsec_is_enabled
                                          else {})) }}"

# Hostname
traefik_role_docker_hostname: "{{ traefik_name }}"

# Networks
traefik_role_docker_networks_alias: "{{ traefik_name }}"
traefik_role_docker_networks_default: []
traefik_role_docker_networks_custom: []
traefik_role_docker_networks: "{{ docker_networks_common
                                  + lookup('role_var', '_docker_networks_default', role='traefik')
                                  + lookup('role_var', '_docker_networks_custom', role='traefik') }}"

# Restart Policy
traefik_role_docker_restart_policy: unless-stopped

# State
traefik_role_docker_state: started
