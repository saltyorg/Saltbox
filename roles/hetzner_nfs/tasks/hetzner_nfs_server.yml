#########################################################################
# Title:         Saltbox: Hetzner NFS Server Task                       #
# Author(s):     l3uddz                                                 #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create nfs server directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0775"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
  with_items:
    - "{{ server_appdata_path }}/hetzner_nfs"

- name: Import 'hosts.deny' file
  ansible.builtin.template:
    src: server/hosts.deny.j2
    dest: /etc/hosts.deny
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: "0644"
    force: true

- name: Install nfs server
  ansible.builtin.apt:
    state: latest
    name:
      - rpcbind
      - nfs-kernel-server

- name: Import exports file
  ansible.builtin.template:
    src: server/exports.j2
    dest: /etc/exports
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: "0644"
    force: true

- name: Reload exports
  ansible.builtin.shell: 'exportfs -ra'

- name: Import 'init_vlan.sh' file
  ansible.builtin.template:
    src: server/init_vlan.sh.j2
    dest: "{{ server_appdata_path }}/hetzner_nfs/init_vlan.sh"
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: "0775"
    force: "{{ hetzner_nfs_init_overwrite_server }}"

- name: Check 'nfs_vlan.service' exists
  ansible.builtin.stat:
    path: '/etc/systemd/system/nfs_vlan.service'
  register: nfs_vlan_service

- name: Import 'nfs_vlan.service' file
  ansible.builtin.template:
    src: server/nfs_vlan.service.j2
    dest: /etc/systemd/system/nfs_vlan.service
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
    mode: "0644"
    force: true
  when: (not nfs_vlan_service.stat.exists)

- name: Start 'nfs_vlan.service'
  ansible.builtin.systemd_service:
    state: started
    name: nfs_vlan
    daemon_reload: true
    enabled: true
