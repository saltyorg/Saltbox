#########################################################################
# Title:         Saltbox: System | Time Zone Tasks                      #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
# https://github.com/galexrt/ansible-timezone/blob/master/tasks/timedatectl.yml
---
- name: Time Zone | Get timedatectl information
  ansible.builtin.command: timedatectl
  register: timedatectl

- name: Time Zone | Get timezone list
  ansible.builtin.command: timedatectl list-timezones --no-pager
  register: timezone_list
  changed_when: false

- name: Time Zone | Fetch Time Zone if set to 'auto'
  when:
    - (system is defined)
    - (system.timezone is defined)
    - ('auto' in system.timezone | lower)
  block:
    - name: Time Zone | Get timezone from IP using multiple sources
      ip_timezone_lookup:
        ip_address: "{{ ip_address_public }}"
        timeout: 5
        min_consensus: 2
      register: tz_lookup

    - name: Time Zone | Set 'timezone' variable from IP lookup
      ansible.builtin.set_fact:
        timezone: "{{ tz_lookup.timezone }}"
      when:
        - tz_lookup.timezone is defined
        - tz_lookup.timezone is not none
        - tz_lookup.confidence in ['high', 'medium']

    - name: Time Zone | Display timezone detection results
      ansible.builtin.debug:
        msg: "Detected timezone '{{ tz_lookup.timezone }}' with {{ tz_lookup.confidence }} confidence ({{ tz_lookup.consensus_count }}/{{ tz_lookup.successful_lookups }} sources agree)"
      when: tz_lookup.timezone is defined

    - name: Time Zone | Fail if low confidence or no consensus
      ansible.builtin.fail:
        msg: "Could not reliably determine timezone. Only {{ tz_lookup.consensus_count }} sources agreed. Manual configuration may be required."
      when:
        - tz_lookup.timezone is none or tz_lookup.confidence == 'low'

  rescue:
    - name: Time Zone | Fallback to curl method if module fails
      ansible.builtin.shell: "curl -s https://ipapi.co/timezone"
      register: system_curl_timezone
      failed_when: (system_curl_timezone.stdout | trim | length == 0)

    - name: Time Zone | Set 'timezone' variable from curl fallback
      ansible.builtin.set_fact:
        timezone: "{{ system_curl_timezone.stdout | trim }}"

- name: Time Zone | Check if timezone is valid
  ansible.builtin.fail:
    msg: "Invalid timezone given, given timezone was {{ timezone }}."
  when: (timezone_list.stdout_lines is defined) and timezone not in timezone_list.stdout_lines

- name: Time Zone | Set 'timezone_string' variable
  ansible.builtin.set_fact:
    timezone_string: "Time zone: {{ timezone }}"

- name: Time Zone | Set timezone
  ansible.builtin.shell: "timedatectl set-timezone {{ timezone }}; timedatectl"
  register: timedatectl_utc
  changed_when: "(timedatectl_utc.stdout is defined) and (timezone_string in timedatectl_utc.stdout)"
  when: (timedatectl.stdout is defined) and (timezone_string not in timedatectl.stdout)

- name: Time Zone | Set hardware clock to use or not use local RTC
  ansible.builtin.shell: "timedatectl set-local-rtc {% if timezone_use_local_rtc %}1{% else %}0{% endif %} && timedatectl || true"
  register: timedatectl_rtc
  changed_when: "(timedatectl_rtc.stdout is defined) and ('RTC in local TZ: {% if timezone_use_local_rtc %}yes{% else %}no{% endif %}' in timedatectl_rtc.stdout)"
  when: "(timedatectl_rtc.stdout is defined) and timezone_use_local_rtc and ('RTC in local TZ: no' not in timedatectl_rtc.stdout)"
