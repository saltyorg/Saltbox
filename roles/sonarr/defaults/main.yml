##########################################################################
# Title:         Saltbox: Sonarr | Default Variables                     #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/saltyorg/Saltbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

sonarr_instances: ["sonarr"]

################################
# Settings
################################

sonarr_role_external_auth: true

################################
# Paths
################################

sonarr_role_paths_folder: "{{ sonarr_name }}"
sonarr_role_paths_location: "{{ server_appdata_path }}/{{ sonarr_role_paths_folder }}"
sonarr_role_paths_folders_list:
  - "{{ sonarr_role_paths_location }}"
sonarr_role_paths_config_location: "{{ sonarr_role_paths_location }}/config.xml"

################################
# Web
################################

sonarr_role_web_subdomain: "{{ sonarr_name }}"
sonarr_role_web_domain: "{{ user.domain }}"
sonarr_role_web_port: "8989"
sonarr_role_web_url: "{{ 'https://' + (lookup('role_var', '_web_subdomain', role='sonarr') + '.' + lookup('role_var', '_web_domain', role='sonarr')
                      if (lookup('role_var', '_web_subdomain', role='sonarr') | length > 0)
                      else lookup('role_var', '_web_domain', role='sonarr')) }}"

################################
# DNS
################################

sonarr_role_dns_record: "{{ lookup('role_var', '_web_subdomain', role='sonarr') }}"
sonarr_role_dns_zone: "{{ lookup('role_var', '_web_domain', role='sonarr') }}"
sonarr_role_dns_proxy: dns_proxied

################################
# Traefik
################################

sonarr_role_traefik_sso_middleware: "{{ traefik_default_sso_middleware }}"
sonarr_role_traefik_middleware_default: "{{ traefik_default_middleware
                                            + (',themepark-' + sonarr_name
                                              if (lookup('role_var', '_themepark_enabled', role='sonarr') and global_themepark_plugin_enabled)
                                              else '') }}"
sonarr_role_traefik_middleware_custom: ""
sonarr_role_traefik_certresolver: "{{ traefik_default_certresolver }}"
sonarr_role_traefik_enabled: true
sonarr_role_traefik_api_enabled: true
sonarr_role_traefik_api_endpoint: "PathPrefix(`/api`) || PathPrefix(`/feed`) || PathPrefix(`/ping`)"

################################
# Theme
################################

# Options can be found at https://github.com/themepark-dev/theme.park
sonarr_role_themepark_enabled: false
sonarr_role_themepark_app: "sonarr"
sonarr_role_themepark_theme: "{{ global_themepark_theme }}"
sonarr_role_themepark_domain: "{{ global_themepark_domain }}"
sonarr_role_themepark_addons: []

################################
# Docker
################################

# Container
sonarr_role_docker_container: "{{ sonarr_name }}"

# Image
sonarr_role_docker_image_pull: true
sonarr_role_docker_image_repo: "ghcr.io/hotio/sonarr"
sonarr_role_docker_image_tag: "release"
sonarr_role_docker_image: "{{ lookup('role_var', '_docker_image_repo', role='sonarr') }}:{{ lookup('role_var', '_docker_image_tag', role='sonarr') }}"

# Envs
sonarr_role_docker_envs_default:
  PUID: "{{ uid }}"
  PGID: "{{ gid }}"
  UMASK: "002"
  TZ: "{{ tz }}"
sonarr_role_docker_envs_custom: {}
sonarr_role_docker_envs: "{{ lookup('role_var', '_docker_envs_default', role='sonarr')
                             | combine(lookup('role_var', '_docker_envs_custom', role='sonarr')) }}"

# Volumes
sonarr_role_docker_volumes_default:
  - "{{ sonarr_role_paths_location }}:/config"
  - "{{ server_appdata_path }}/scripts:/scripts"
sonarr_role_docker_volumes_legacy:
  - "/mnt/unionfs/Media/TV:/tv"
sonarr_role_docker_volumes_custom: []
sonarr_role_docker_volumes: "{{ lookup('role_var', '_docker_volumes_default', role='sonarr')
                                + lookup('role_var', '_docker_volumes_custom', role='sonarr')
                                + (lookup('role_var', '_docker_volumes_legacy', role='sonarr')
                                  if docker_legacy_volume
                                  else []) }}"

# Labels
sonarr_role_docker_labels_default: {}
sonarr_role_docker_labels_custom: {}
sonarr_role_docker_labels: "{{ lookup('role_var', '_docker_labels_default', role='sonarr')
                               | combine((traefik_themepark_labels
                                         if (lookup('role_var', '_themepark_enabled', role='sonarr') and global_themepark_plugin_enabled)
                                         else {}),
                                         lookup('role_var', '_docker_labels_custom', role='sonarr')) }}"

# Hostname
sonarr_role_docker_hostname: "{{ sonarr_name }}"

# Networks
sonarr_role_docker_networks_alias: "{{ sonarr_name }}"
sonarr_role_docker_networks_default: []
sonarr_role_docker_networks_custom: []
sonarr_role_docker_networks: "{{ docker_networks_common
                                 + lookup('role_var', '_docker_networks_default', role='sonarr')
                                 + lookup('role_var', '_docker_networks_custom', role='sonarr') }}"

# Restart Policy
sonarr_role_docker_restart_policy: unless-stopped

# State
sonarr_role_docker_state: started
