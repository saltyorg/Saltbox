#########################################################################
# Title:         Saltbox: Authelia Role                                 #
# Author(s):     salty                                                  #
# URL:           https://github.com/saltyorg/Saltbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Fail if not master"
  ansible.builtin.fail:
    msg: "This server is not set as Authelia master server."
  when: (not authelia_is_master)

- name: "Fail if invalid Authentication Backend"
  ansible.builtin.fail:
    msg: "{{ authelia_name }}_authentication_backend or {{ authelia_name }}_role_authentication_backend is not valid. Use 'file' or 'ldap'."
  when: not lookup('role_var', '_authentication_backend') in ["file", "ldap"]

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Reset Authelia directory
  ansible.builtin.file:
    path: "{{ authelia_role_paths_location }}"
    state: absent
  when: ('authelia-reset' in ansible_run_tags)

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Check if 'configuration.yml' exists
  ansible.builtin.stat:
    path: "{{ authelia_role_paths_location }}/configuration.yml"
  register: authelia_config_stat

- name: Load authentication_backend value
  ansible.builtin.shell: |
    yyq '.authentication_backend' {{ authelia_role_paths_location }}/configuration.yml
  register: authentication_backend_key
  when: authelia_config_stat.stat.exists and (not 'authelia-reset' in ansible_run_tags)

- name: Fail if Configuration was generated with incorrect authentication_backend
  ansible.builtin.fail:
    msg:
      - "You seem to have changed '{{ authelia_name }}_authentication_backend' or '{{ authelia_name }}_role_authentication_backend' but the old configuration still exists."
      - "Backup the Authelia opt folder if you want to keep it and then run the 'authelia-reset' tag."
      - "Port any modifications made to your configurations.yml from the backup that you want to keep."
  when:
    - (not 'authelia-reset' in ansible_run_tags)
    - authelia_config_stat.stat.exists
    - ((('ldap' in authentication_backend_key.stdout) and (lookup('role_var', '_authentication_backend') == 'file'))
      or (('file' in authentication_backend_key.stdout) and (lookup('role_var', '_authentication_backend') == 'ldap')))

- name: Authentication Backend Task
  ansible.builtin.include_tasks: "subtasks/auth_backend.yml"

- name: Remove legacy Redis Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"
  vars:
    var_prefix: "{{ item }}"
  loop:
    - "authelia_redis"
    - "redis"

- name: Cleanup legacy Redis directory
  ansible.builtin.file:
    path: "{{ server_appdata_path }}/authelia_redis"
    state: absent

- name: "Import Redis Role"
  ansible.builtin.include_role:
    name: redis
  vars:
    redis_instances: ["authelia-redis"]

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('role_var', '_dns_record') }}"
    dns_zone: "{{ lookup('role_var', '_dns_zone') }}"
    dns_proxy: "{{ lookup('role_var', '_dns_proxy') }}"

- name: Settings Task
  ansible.builtin.include_tasks: "subtasks/settings.yml"
  when: (authelia_config_stat.stat.exists)

- name: Logrotate | Create 'authelia_logrotate' variable
  ansible.builtin.set_fact:
    authelia_logrotate:
      - path: "{{ authelia_name }}"
        content: |
          {{ server_appdata_path }}/{{ authelia_name }}/authelia.log {
              su {{ user.name }} {{ user.name }}
              rotate {{ lookup('role_var', '_log_max_backups') }}
              size {{ lookup('role_var', '_log_max_size') }}
              missingok
              notifempty
              postrotate
                docker kill --signal="HUP" {{ lookup('role_var', '_docker_container') }}
              endscript
              create 600 {{ user.name }} {{ user.name }}
          }

- name: Logrotate | Add items to '/etc/logrotate.d'
  ansible.builtin.blockinfile:
    path: "/etc/logrotate.d/{{ item.path }}"
    marker: "### SALTBOX MANAGED BLOCK - {mark} ###"
    block: "{{ item.content }}"
    create: true
    mode: "0644"
  loop: "{{ authelia_logrotate }}"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"
