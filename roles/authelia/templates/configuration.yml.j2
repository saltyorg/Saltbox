---
###############################################################
#                   Authelia configuration                    #
###############################################################

identity_validation:
  reset_password:
    jwt_lifespan: {{ lookup('role_var', '_identity_validation_reset_password_jwt_lifespan', role='authelia') }}
    jwt_algorithm: {{ lookup('role_var', '_identity_validation_reset_password_jwt_algorithm', role='authelia') }}
    jwt_secret: {{ lookup('role_var', '_jwt_secret', role='authelia') }}
  elevated_session:
    code_lifespan: {{ lookup('role_var', '_identity_validation_elevated_session_code_lifespan', role='authelia') }}
    elevation_lifespan: {{ lookup('role_var', '_identity_validation_elevated_session_elevation_lifespan', role='authelia') }}
    characters: {{ lookup('role_var', '_identity_validation_elevated_session_characters', role='authelia') }}
    require_second_factor: {{ lookup('role_var', '_identity_validation_elevated_session_require_second_factor', role='authelia') }}
    skip_second_factor: {{ lookup('role_var', '_identity_validation_elevated_session_skip_second_factor', role='authelia') }}

# Options are light, dark, grey or auto
theme: {{ lookup('role_var', '_theme', role='authelia') }}

{% if lookup('role_var', '_default_redirection_url', role='authelia') | length > 0 %}
default_redirection_url: {{ lookup('role_var', '_default_redirection_url', role='authelia') }}

{% endif %}
default_2fa_method: "{{ lookup('role_var', '_default_2fa_method', role='authelia') }}"

server:
  address: {{ lookup('role_var', '_server_address', role='authelia') }}
{% if lookup('role_var', '_server_asset_path', role='authelia') | length > 0 %}
  asset_path: {{ lookup('role_var', '_server_asset_path', role='authelia') }}
{% endif %}
  disable_healthcheck: {{ lookup('role_var', '_server_disable_healthcheck', role='authelia') }}
  buffers:
    read: {{ lookup('role_var', '_server_buffers_read', role='authelia') }}
    write: {{ lookup('role_var', '_server_buffers_write', role='authelia') }}
  timeouts:
    read: {{ lookup('role_var', '_server_timeouts_read', role='authelia') }}
    write: {{ lookup('role_var', '_server_timeouts_write', role='authelia') }}
    idle: {{ lookup('role_var', '_server_timeouts_idle', role='authelia') }}
  endpoints:
    enable_pprof: {{ lookup('role_var', '_server_endpoints_enable_pprof', role='authelia') }}
    enable_expvars: {{ lookup('role_var', '_server_endpoints_enable_expvars', role='authelia') }}
  headers:
    csp_template: "{{ lookup('role_var', '_server_headers_csp_template', role='authelia') }}"

log:
  level: {{ lookup('role_var', '_log_level', role='authelia') }}
  format: {{ lookup('role_var', '_log_format', role='authelia') }}
  file_path: {{ lookup('role_var', '_log_file_path', role='authelia') }}
  keep_stdout: {{ lookup('role_var', '_log_keep_stdout', role='authelia') }}

telemetry:
  metrics:
    enabled: {{ lookup('role_var', '_telemetry_metrics_enabled', role='authelia') }}
{% if lookup('role_var', '_telemetry_metrics_enabled', role='authelia') | bool %}
    address: {{ lookup('role_var', '_telemetry_metrics_address', role='authelia') }}
    buffers:
      read: {{ lookup('role_var', '_telemetry_metrics_buffers_read', role='authelia') }}
      write: {{ lookup('role_var', '_telemetry_metrics_buffers_write', role='authelia') }}
    timeouts:
      read: {{ lookup('role_var', '_telemetry_metrics_timeouts_read', role='authelia') }}
      write: {{ lookup('role_var', '_telemetry_metrics_timeouts_write', role='authelia') }}
      idle: {{ lookup('role_var', '_telemetry_metrics_timeouts_idle', role='authelia') }}
{% endif %}

totp:
  disable: {{ lookup('role_var', '_totp_disable', role='authelia') }}
  issuer: {{ lookup('role_var', '_totp_issuer', role='authelia') }}
  algorithm: {{ lookup('role_var', '_totp_algorithm', role='authelia') }}
  digits: {{ lookup('role_var', '_totp_digits', role='authelia') }}
  period: {{ lookup('role_var', '_totp_period', role='authelia') }}
  skew: {{ lookup('role_var', '_totp_skew', role='authelia') }}
  secret_size: {{ lookup('role_var', '_totp_secret_size', role='authelia') }}
  allowed_algorithms: {{ lookup('role_var', '_totp_allowed_algorithms', role='authelia') }}
  allowed_digits: {{ lookup('role_var', '_totp_allowed_digits', role='authelia') }}
  allowed_periods: {{ lookup('role_var', '_totp_allowed_periods', role='authelia') }}
  disable_reuse_security_policy: {{ lookup('role_var', '_totp_disable_reuse_security_policy', role='authelia') }}

{% if lookup('role_var', '_duo_enabled', role='authelia') | bool %}
duo_api:
  disable: false
  hostname: {{ lookup('role_var', '_duo_hostname', role='authelia') }}
  integration_key: {{ lookup('role_var', '_duo_integration_key', role='authelia') }}
  secret_key: {{ lookup('role_var', '_duo_secret_key', role='authelia') }}
  enable_self_enrollment: {{ lookup('role_var', '_duo_self_enrollment', role='authelia') }}
{% else %}
#
# If you want to use Duo Push notifications
#
# duo_api:
#   hostname: api-123456789.example.com
#   integration_key: ABCDEF
#   secret_key: 1234567890abcdefghifjkl
#
# Read more at https://www.authelia.com/docs/configuration/duo-push-notifications.html
#
{% endif %}

webauthn:
  disable: {{ lookup('role_var', '_webauthn_disable', role='authelia') }}
  enable_passkey_login: {{ lookup('role_var', '_webauthn_enable_passkey_login', role='authelia') }}
  display_name: {{ lookup('role_var', '_webauthn_display_name', role='authelia') }}
  attestation_conveyance_preference: {{ lookup('role_var', '_webauthn_attestation_conveyance_preference', role='authelia') }}
  timeout: {{ lookup('role_var', '_webauthn_timeout', role='authelia') }}
  filtering:
    prohibit_backup_eligibility: {{ lookup('role_var', '_webauthn_filtering_prohibit_backup_eligibility', role='authelia') }}
{% if lookup('role_var', '_webauthn_filtering_permitted_aaguids', role='authelia') | length > 0 %}
    permitted_aaguids: {{ lookup('role_var', '_webauthn_filtering_permitted_aaguids', role='authelia') }}
{% endif %}
{% if lookup('role_var', '_webauthn_filtering_prohibited_aaguids', role='authelia') | length > 0 %}
    prohibited_aaguids: {{ lookup('role_var', '_webauthn_filtering_prohibited_aaguids', role='authelia') }}
{% endif %}
  selection_criteria:
    attachment: {{ lookup('role_var', '_webauthn_selection_criteria_attachment', role='authelia') }}
    discoverability: {{ lookup('role_var', '_webauthn_selection_criteria_discoverability', role='authelia') }}
    user_verification: {{ lookup('role_var', '_webauthn_selection_criteria_user_verification', role='authelia') }}
  metadata:
    enabled: {{ lookup('role_var', '_webauthn_metadata_enabled', role='authelia') }}
{% if lookup('role_var', '_webauthn_metadata_enabled', role='authelia') | bool %}
    cache_policy: {{ lookup('role_var', '_webauthn_metadata_cache_policy', role='authelia') }}
    validate_trust_anchor: {{ lookup('role_var', '_webauthn_metadata_validate_trust_anchor', role='authelia') }}
    validate_entry: {{ lookup('role_var', '_webauthn_metadata_validate_entry', role='authelia') }}
    validate_entry_permit_zero_aaguid: {{ lookup('role_var', '_webauthn_metadata_validate_entry_permit_zero_aaguid', role='authelia') }}
    validate_status: {{ lookup('role_var', '_webauthn_metadata_validate_status', role='authelia') }}
{% if lookup('role_var', '_webauthn_metadata_validate_status_permitted', role='authelia') | length > 0 %}
    validate_status_permitted: {{ lookup('role_var', '_webauthn_metadata_validate_status_permitted', role='authelia') }}
{% endif %}
{% if lookup('role_var', '_webauthn_metadata_validate_status_prohibited', role='authelia') | length > 0 %}
    validate_status_prohibited: {{ lookup('role_var', '_webauthn_metadata_validate_status_prohibited', role='authelia') }}
{% endif %}
{% endif %}

authentication_backend:
  password_change:
    disable: {{ lookup('role_var', '_authentication_backend_password_change_disable', role='authelia') }}
  password_reset:
    disable: {{ lookup('role_var', '_authentication_backend_password_reset_disable', role='authelia') }}
    custom_url: "{{ lookup('role_var', '_authentication_backend_password_reset_custom_url', role='authelia') }}"
  refresh_interval: {{ lookup('role_var', '_authentication_backend_refresh_interval', role='authelia') }}
{% if lookup('role_var', '_authentication_backend', role='authelia') == 'file' %}
  file:
    path: {{ lookup('role_var', '_authentication_backend_file_path', role='authelia') }}
    watch: {{ lookup('role_var', '_authentication_backend_file_watch', role='authelia') }}
    password:
      algorithm: {{ lookup('role_var', '_authentication_backend_file_password_algorithm', role='authelia') }}
      argon2:
        variant: {{ lookup('role_var', '_authentication_backend_file_password_argon2_variant', role='authelia') }}
        iterations: {{ lookup('role_var', '_authentication_backend_file_password_argon2_iterations', role='authelia') }}
        memory: {{ lookup('role_var', '_authentication_backend_file_password_argon2_memory', role='authelia') }}
        parallelism: {{ lookup('role_var', '_authentication_backend_file_password_argon2_parallelism', role='authelia') }}
        key_length: {{ lookup('role_var', '_authentication_backend_file_password_argon2_key_length', role='authelia') }}
        salt_length: {{ lookup('role_var', '_authentication_backend_file_password_argon2_salt_length', role='authelia') }}
{% endif %}
{% if lookup('role_var', '_authentication_backend', role='authelia') == 'ldap' %}
  ldap:
    implementation: custom
    address: ldap://lldap:3890
    start_tls: false
    tls:
      skip_verify: true
      minimum_version: TLS1.2
    base_dn: dc={{ authelia_tld_parse.domain }},dc={{ authelia_tld_parse.tld }}
    additional_users_dn: ou=people
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    additional_groups_dn: ou=groups
    groups_filter: "(member={dn})"
    user: uid={{ user.name }},ou=people,dc={{ authelia_tld_parse.domain }},dc={{ authelia_tld_parse.tld }}
    password: {{ user.pass }}
    attributes:
      group_name: cn
      display_name: displayName
      mail: mail

{% endif %}

password_policy:
  standard:
    enabled: {{ lookup('role_var', '_password_policy_standard_enabled', role='authelia') }}
    min_length: {{ lookup('role_var', '_password_policy_standard_min_length', role='authelia') }}
    max_length: {{ lookup('role_var', '_password_policy_standard_max_length', role='authelia') }}
    require_uppercase: {{ lookup('role_var', '_password_policy_standard_require_uppercase', role='authelia') }}
    require_lowercase: {{ lookup('role_var', '_password_policy_standard_require_lowercase', role='authelia') }}
    require_number: {{ lookup('role_var', '_password_policy_standard_require_number', role='authelia') }}
    require_special: {{ lookup('role_var', '_password_policy_standard_require_special', role='authelia') }}
  zxcvbn:
    enabled: {{ lookup('role_var', '_password_policy_zxcvbn_enabled', role='authelia') }}
    min_score: {{ lookup('role_var', '_password_policy_zxcvbn_min_score', role='authelia') }}

access_control:
  default_policy: {{ lookup('role_var', '_access_control_default_policy', role='authelia') }}
  rules:
    {{ (lookup('role_var', '_access_control_whitelist_rules_lookup', role='authelia') + lookup('role_var', '_access_control_rules', role='authelia')) | to_nice_yaml | indent(4) }}

session:
  name: {{ (lookup('role_var', '_web_subdomain', role='authelia') + '.' + lookup('role_var', '_web_domain', role='authelia')) | lower }}
  secret: {{ lookup('password', '/dev/null', chars=['ascii_letters', 'digits'], length=32) }}
  expiration: 1h
  inactivity: 5m
  remember_me: 1M
  same_site: lax
  redis:
    host: authelia-redis
    port: 6379
  cookies:
    - domain: {{ lookup('role_var', '_web_domain', role='authelia') | lower }}
      authelia_url: {{ lookup('role_var', '_web_url', role='authelia') | lower }}
      name: authelia_{{ lookup('role_var', '_web_domain', role='authelia') | lower }}
      same_site: lax
      inactivity: 5m
      expiration: 1h
      remember_me: 1M

regulation:
  max_retries: 3
  find_time: 2m
  ban_time: 5m

storage:
  encryption_key: {{ lookup('password', '/dev/null', chars=['ascii_letters', 'digits'], length=64) }}
  local:
    path: /config/db.sqlite3

ntp:
  address: "{{ lookup('role_var', '_ntp_address', role='authelia') }}"
  version: {{ lookup('role_var', '_ntp_version', role='authelia') }}
  max_desync: {{ lookup('role_var', '_ntp_max_desync', role='authelia') }}
  disable_startup_check: {{ lookup('role_var', '_ntp_disable_startup_check', role='authelia') }}
  disable_failure: {{ lookup('role_var', '_ntp_disable_failure', role='authelia') }}

notifier:
  disable_startup_check: {{ lookup('role_var', '_notifier_disable_startup_check', role='authelia') }}
{% if lookup('role_var', '_notifier', role='authelia') == 'filesystem' %}
  filesystem:
    filename: /config/notification.txt
{% endif %}
{% if lookup('role_var', '_notifier', role='authelia') == 'smtp' %}
  smtp:
    host: {{ lookup('role_var', '_notifier_smtp_host', role='authelia') }}
    port: {{ lookup('role_var', '_notifier_smtp_port', role='authelia') }}
    timeout: {{ (lookup('role_var', '_notifier_smtp_timeout', role='authelia')) | default(omit) }}
    username: {{ (lookup('role_var', '_notifier_smtp_username', role='authelia')) | default(omit) }}
    password: {{ (lookup('role_var', '_notifier_smtp_password', role='authelia')) | default(omit) }}
    sender: {{ lookup('role_var', '_notifier_smtp_sender', role='authelia') }}
    identifier: {{ (lookup('role_var', '_notifier_smtp_identifier', role='authelia')) | default(omit) }}
    subject: "{{ (lookup('role_var', '_notifier_smtp_subject', role='authelia')) | default(omit) }}"
    startup_check_address: {{ (lookup('role_var', '_notifier_smtp_startup_check_address', role='authelia')) | default(omit) }}
    disable_require_tls: {{ (lookup('role_var', '_notifier_smtp_disable_require_tls', role='authelia')) | default(omit) }}
    disable_html_emails: {{ (lookup('role_var', '_notifier_smtp_disable_html_emails', role='authelia')) | default(omit) }}
    tls:
      server_name: {{ (lookup('role_var', '_notifier_smtp_tls_server_name', role='authelia')) | default(omit) }}
      skip_verify: {{ (lookup('role_var', '_notifier_smtp_tls_skip_verify', role='authelia')) | default(omit) }}
      minimum_version: {{ (lookup('role_var', '_notifier_smtp_tls_minimum_version', role='authelia')) | default(omit) }}
{% else %}
#
# If you want to use email here is a template (Replace the above entry as you can only have one notifier configured)
#
# notifier:
#   disable_startup_check: false
#   smtp:
#     host: 127.0.0.1
#     port: 1025
#     timeout: 5s
#     username: test
#     password: password
#     sender: admin@example.com
#     identifier: localhost
#     subject: "[Authelia] {title}"
#     startup_check_address: test@authelia.com
#     disable_require_tls: false
#     disable_html_emails: false
#     tls:
#       server_name: smtp.example.com
#       skip_verify: false
#       minimum_version: TLS1.2
#
# Read more at https://www.authelia.com/docs/configuration/notifier/smtp.html
#
{% endif %}

...